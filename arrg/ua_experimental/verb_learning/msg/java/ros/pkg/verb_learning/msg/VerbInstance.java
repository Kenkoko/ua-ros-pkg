/* auto-generated by genmsg_cpp from /home/dhewlett/ros/ua-ros-pkg/ua_experimental/verb_learning/msg/VerbInstance.msg.  Do not edit! */
package ros.pkg.verb_learning.msg;


import java.nio.ByteBuffer;

public  class VerbInstance extends ros.communication.Message
{

  public java.lang.String verb;
  public java.lang.String[] arguments;
  public java.lang.String[] bindings;

  public VerbInstance() {
 super();
    verb = new java.lang.String();
  arguments = new java.lang.String[0];
  bindings = new java.lang.String[0];

  }
  public static java.lang.String __s_getDataType() { return "verb_learning/VerbInstance"; }
  public static java.lang.String __s_getMD5Sum() { return "02df6ec35e0b81623eb9cf1a37768a45"; }
  public static java.lang.String __s_getMessageDefinition()
  {
    return 
    "string verb\n" + 
    "string[] arguments # These are the role names\n" + 
    "string[] bindings # These are the object names\n" + 
    "\n" + 
    "";
  }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public java.lang.String getMD5Sum()   { return __s_getMD5Sum(); }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }
  public VerbInstance clone() {
    VerbInstance clone = (VerbInstance)super.clone();
      arguments =  (java.lang.String[])(clone.arguments.clone());
      bindings =  (java.lang.String[])(clone.bindings.clone());
    return clone;
  }

  public static java.util.Map<java.lang.String, java.lang.String> fieldTypes() {
         java.util.HashMap<java.lang.String, java.lang.String> m = new java.util.HashMap<java.lang.String, java.lang.String>  ();      m.put("verb", "java.lang.String");
     m.put("arguments", "java.lang.String[]");
     m.put("bindings", "java.lang.String[]");
     return m;
  }

  public static java.util.Set<java.lang.String> submessageTypes() {
         java.util.HashSet<java.lang.String> s = new java.util.HashSet<java.lang.String>  ();      return s;
  }

  public void setTo(ros.communication.Message __m) {
    if (!(__m instanceof VerbInstance)) throw new RuntimeException("Invalid Type");
    VerbInstance __m2 = (VerbInstance) __m;
    verb = __m2.verb;
    arguments = __m2.arguments;
    bindings = __m2.bindings;
    }

  int calc_arguments_array_serialization_len() {
    int l = 0;
    for (int i = 0; i < arguments.length; i++) 
      l += 4 + arguments[i].length();
    return l;
  }
  int calc_bindings_array_serialization_len() {
    int l = 0;
    for (int i = 0; i < bindings.length; i++) 
      l += 4 + bindings[i].length();
    return l;
  }
  public int serializationLength() 
  {
    int __l = 0;
    __l += 4 + verb.length(); // verb
    __l += 4 + calc_arguments_array_serialization_len(); // arguments
    __l += 4 + calc_bindings_array_serialization_len(); // bindings
    return __l;
  }
  public void serialize(ByteBuffer bb, int seq) {
    Serialization.writeString(bb, verb);
    bb.putInt(arguments.length);
    for (java.lang.String x : arguments)
      Serialization.writeString(bb, x);
    bb.putInt(bindings.length);
    for (java.lang.String x : bindings)
      Serialization.writeString(bb, x);
  }
  public void deserialize(ByteBuffer bb)  {
    verb = Serialization.readString(bb);
     int arguments_len = bb.getInt();
    arguments = new java.lang.String[arguments_len];
    for(int i = 0; i < arguments_len; i++)
      arguments[i] = Serialization.readString(bb);
     int bindings_len = bb.getInt();
    bindings = new java.lang.String[bindings_len];
    for(int i = 0; i < bindings_len; i++)
      bindings[i] = Serialization.readString(bb);
  }
}

