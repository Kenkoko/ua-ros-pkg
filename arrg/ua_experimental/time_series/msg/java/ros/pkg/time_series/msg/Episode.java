/* auto-generated by genmsg_cpp from /home/dhewlett/ros/ua-ros-pkg/ua_experimental/time_series/msg/Episode.msg.  Do not edit! */
package ros.pkg.time_series.msg;


import java.nio.ByteBuffer;

public  class Episode extends ros.communication.Message
{

  public ros.pkg.time_series.msg.Interval[] intervals;

  public Episode() {
 super();
  intervals = new ros.pkg.time_series.msg.Interval[0];

  }
  public static java.lang.String __s_getDataType() { return "time_series/Episode"; }
  public static java.lang.String __s_getMD5Sum() { return "857a26b4acfddd4a7784f52edcd6cef3"; }
  public static java.lang.String __s_getMessageDefinition()
  {
    return 
    "time_series/Interval[] intervals\n" + 
    "================================================================================\n" + 
    "MSG: time_series/Interval\n" + 
    "string proposition\n" + 
    "int32 start\n" + 
    "int32 end\n" + 
    "\n" + 
    "";
  }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public java.lang.String getMD5Sum()   { return __s_getMD5Sum(); }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }
  public Episode clone() {
    Episode clone = (Episode)super.clone();
      intervals =  (ros.pkg.time_series.msg.Interval[])(clone.intervals.clone());
      for (int i = 0; i < intervals.length; i++) intervals[i] = (ros.pkg.time_series.msg.Interval)intervals[i].clone();
    return clone;
  }

  public static java.util.Map<java.lang.String, java.lang.String> fieldTypes() {
         java.util.HashMap<java.lang.String, java.lang.String> m = new java.util.HashMap<java.lang.String, java.lang.String>  ();      m.put("intervals", "ros.pkg.time_series.msg.Interval[]");
     return m;
  }

  public static java.util.Set<java.lang.String> submessageTypes() {
         java.util.HashSet<java.lang.String> s = new java.util.HashSet<java.lang.String>  ();      s.add("ros.pkg.time_series.msg.Interval");
     return s;
  }

  public void setTo(ros.communication.Message __m) {
    if (!(__m instanceof Episode)) throw new RuntimeException("Invalid Type");
    Episode __m2 = (Episode) __m;
    intervals = __m2.intervals;
    }

  int calc_intervals_array_serialization_len() {
    int l = 0;
    for (int i = 0; i < intervals.length; i++) 
      l += intervals[i].serializationLength();
    return l;
  }
  public int serializationLength() 
  {
    int __l = 0;
    __l += 4 + calc_intervals_array_serialization_len(); // intervals
    return __l;
  }
  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt(intervals.length);
    for (ros.pkg.time_series.msg.Interval x : intervals)
      x.serialize(bb, seq);
  }
  public void deserialize(ByteBuffer bb)  {
     int intervals_len = bb.getInt();
    intervals = new ros.pkg.time_series.msg.Interval[intervals_len];
    for(int i = 0; i < intervals_len; i++)
      {intervals[i] = new ros.pkg.time_series.msg.Interval(); intervals[i].deserialize(bb); }
  }
}

