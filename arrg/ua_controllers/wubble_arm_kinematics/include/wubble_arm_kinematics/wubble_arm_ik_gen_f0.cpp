/// autogenerated analytical inverse kinematics code from ikfast program
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// generated 2010-10-25 17:32:37.794744
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object:
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -shared -Wl,-soname,ik.so -o ik.so ik.cpp
#include <math.h>
#include <assert.h>
#include <vector>
#include <float.h>

#define IK2PI  6.28318530717959
#define IKPI  3.14159265358979
#define IKPI_2  1.57079632679490

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// defined when creating a shared object/dll
#ifdef IKFAST_CLIBRARY
#ifdef _MSC_VER
#define IKFAST_API extern "C" __declspec(dllexport)
#else
#define IKFAST_API extern "C"
#endif
#else
#define IKFAST_API
#endif

typedef double IKReal;
class IKSolution
{
public:
    /// Gets a solution given its free parameters
    /// \param pfree The free parameters required, range is in [-pi,pi]
    void GetSolution(IKReal* psolution, const IKReal* pfree) const {
        for(size_t i = 0; i < basesol.size(); ++i) {
            if( basesol[i].freeind < 0 )
                psolution[i] = basesol[i].foffset;
            else {
                assert(pfree != NULL);
                psolution[i] = pfree[basesol[i].freeind]*basesol[i].fmul + basesol[i].foffset;
                if( psolution[i] > IKPI )
                    psolution[i] -= IK2PI;
                else if( psolution[i] < -IKPI )
                    psolution[i] += IK2PI;
            }
        }
    }

    /// Gets the free parameters the solution requires to be set before a full solution can be returned
    /// \return vector of indices indicating the free parameters
    const std::vector<int>& GetFree() const { return vfree; }

    struct VARIABLE
    {
        VARIABLE() : freeind(-1), fmul(0), foffset(0) {}
        VARIABLE(int freeind, IKReal fmul, IKReal foffset) : freeind(freeind), fmul(fmul), foffset(foffset) {}
        int freeind;
        IKReal fmul, foffset; ///< joint value is fmul*sol[freeind]+foffset
    };

    std::vector<VARIABLE> basesol;       ///< solution and their offsets if joints are mimiced
    std::vector<int> vfree;
};

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKasin(float f)
{
assert( f > -1.001f && f < 1.001f ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asinf(f);
}
inline double IKasin(double f)
{
assert( f > -1.001 && f < 1.001 ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline float IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
assert( f > -1.001f && f < 1.001f ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0.0f;
return acosf(f);
}
inline double IKacos(double f)
{
assert( f > -1.001 && f < 1.001 ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0.0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        assert(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) )
        return 0;
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        assert(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) )
        return 0;
    return atan2(fy,fx);
}

IKFAST_API int getNumFreeParameters() { return 1; }
IKFAST_API int* getFreeParameters() { static int freeparams[] = {0}; return freeparams; }
IKFAST_API int getNumJoints() { return 7; }

IKFAST_API int getIKRealSize() { return sizeof(IKReal); }

IKFAST_API int getIKType() { return 1; }

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void fk(const IKReal* j, IKReal* eetrans, IKReal* eerot) {
    IKReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95;
    x0=IKcos(j[6]);
    x1=IKsin(j[4]);
    x2=IKsin(j[6]);
    x3=IKcos(j[4]);
    x4=IKsin(j[5]);
    x5=IKcos(j[2]);
    x6=IKcos(j[3]);
    x7=IKcos(j[5]);
    x8=((x0)*(x6)*(x7));
    x9=IKsin(j[3]);
    x10=((x2)*(x3));
    x11=((x0)*(x1)*(x4));
    x12=((x11)+(x10));
    x13=IKsin(j[2]);
    x14=((x1)*(x2));
    x15=((x0)*(x3)*(x4));
    x16=((((-1.00000000000000)*(x15)))+(x14));
    x17=((-1.00000000000000)*(x12));
    x18=IKsin(j[0]);
    x19=IKcos(j[0]);
    x20=IKsin(j[1]);
    x21=((x14)*(x4));
    x22=((x0)*(x3));
    x23=IKcos(j[1]);
    x24=((x0)*(x1));
    x25=((x10)*(x4));
    x26=((x24)+(x25));
    x27=((((-1.00000000000000)*(x22)))+(x21));
    x28=((x4)*(x6));
    x29=((x1)*(x7)*(x9));
    x30=((x28)+(x29));
    x31=((x17)*(x9));
    x32=((x8)+(x31));
    x33=((x32)*(x5));
    x34=((x13)*(x16));
    x35=((x33)+(x34));
    x36=((x23)*(x35));
    x37=((x17)*(x6));
    x38=((-1.00000000000000)*(x0)*(x7)*(x9));
    x39=((x38)+(x37));
    x40=((x20)*(x39));
    x41=((x36)+(x40));
    x42=((x12)*(x9));
    x43=((x42)+(((-1.00000000000000)*(x8))));
    x44=((x13)*(x43));
    x45=((x16)*(x5));
    x46=((x44)+(x45));
    x47=((x3)*(x5)*(x7));
    x48=((-1.00000000000000)*(x30));
    x49=((x13)*(x48));
    x50=((x49)+(x47));
    x51=((0.261080000000220)*(x6));
    x52=((0.0289999999999964)+(x51));
    x53=((0.0289900000000216)*(x9));
    x54=((x52)+(((-1.00000000000000)*(x53))));
    x55=((x1)*(x6)*(x7));
    x56=((x4)*(x9));
    x57=((x55)+(((-1.00000000000000)*(x56))));
    x58=((x20)*(x57));
    x59=((x30)*(x5));
    x60=((x13)*(x3)*(x7));
    x61=((x59)+(x60));
    x62=((x23)*(x61));
    x63=((x58)+(x62));
    x64=((x13)*(x26));
    x65=((x27)*(x9));
    x66=((x2)*(x6)*(x7));
    x67=((((-1.00000000000000)*(x21)))+(x22));
    x68=((x2)*(x7)*(x9));
    x69=((x0)*(x7)*(x9));
    x70=((x12)*(x6));
    x71=((x70)+(x69));
    x72=((0.0289900000000216)*(x6));
    x73=((0.261080000000220)*(x9));
    x74=((0.289820000001782)+(x73)+(x72));
    x75=((x56)+(((-1.00000000000000)*(x55))));
    x76=((x6)*(x67));
    x77=((x76)+(((-1.00000000000000)*(x68))));
    x78=((x67)*(x9));
    x79=((x78)+(x66));
    x80=((x13)*(x79));
    x81=((x26)*(x5));
    x82=((x80)+(x81));
    x83=((x20)*(x71));
    x84=((((-1.00000000000000)*(x14)))+(x15));
    x85=((x13)*(x84));
    x86=((x43)*(x5));
    x87=((x86)+(x85));
    x88=((x23)*(x87));
    x89=((x88)+(x83));
    x90=((x23)*(x5)*(x54));
    x91=((x20)*(x75));
    x92=((x48)*(x5));
    x93=((x92)+(((-1.00000000000000)*(x60))));
    x94=((x23)*(x93));
    x95=((x91)+(x94));
    eerot[0]=((((x19)*(x41)))+(((x18)*(x46))));
    eerot[1]=((((x19)*(((((x23)*(((((x5)*(((x65)+(((-1.00000000000000)*(x66)))))))+(x64)))))+(((x20)*(((((x27)*(x6)))+(x68)))))))))+(((x18)*(x82))));
    eerot[2]=((((x18)*(x50)))+(((x19)*(x63))));
    eetrans[0]=((0.0290000000000000)+(((x19)*(((((-1.00000000000000)*(x20)*(x74)))+(x90)))))+(((-0.0270000003725290)*(x19)*(x63)))+(((-0.0270000003725290)*(x18)*(x50)))+(((0.178100000119209)*(x18)*(x46)))+(((-1.00000000000000)*(x13)*(x18)*(x54)))+(((0.178100000119209)*(x19)*(x41))));
    eerot[3]=((((x20)*(x35)))+(((x23)*(x71))));
    eerot[4]=((((x23)*(x77)))+(((x20)*(((((x5)*(((x65)+(((-1.00000000000000)*(x66)))))))+(x64))))));
    eerot[5]=((((x20)*(x61)))+(((x23)*(x75))));
    eetrans[1]=((0.0930000000000000)+(((x23)*(x74)))+(((-0.0270000003725290)*(x20)*(x61)))+(((0.178100000119209)*(x23)*(x71)))+(((x20)*(x5)*(x54)))+(((0.178100000119209)*(x20)*(x35)))+(((-0.0270000003725290)*(x23)*(x75))));
    eerot[6]=((((x19)*(x46)))+(((x18)*(x89))));
    eerot[7]=((((x19)*(x82)))+(((x18)*(((((x23)*(((((x5)*(x79)))+(((-1.00000000000000)*(x13)*(x26)))))))+(((x20)*(x77))))))));
    eerot[8]=((((x19)*(x50)))+(((x18)*(x95))));
    eetrans[2]=((((-0.0270000003725290)*(x19)*(x50)))+(((-1.00000000000000)*(x13)*(x19)*(x54)))+(((x18)*(((((x20)*(x74)))+(((-1.00000000000000)*(x90)))))))+(((0.178100000119209)*(x19)*(x46)))+(((-0.0270000003725290)*(x18)*(x95)))+(((0.178100000119209)*(x18)*(x89))));
    }

class IKSolver {
public:
IKReal j1, cj1, sj1,
j2, cj2, sj2,
j3, cj3, sj3,
j4, cj4, sj4,
j5, cj5, sj5,
j6, cj6, sj6,
j0, cj0, sj0,
new_r00, r00,
new_r01, r01,
new_r02, r02,
new_r10, r10,
new_r11, r11,
new_r12, r12,
new_r20, r20,
new_r21, r21,
new_r22, r22,
new_px, new_py, new_pz, px, py, pz;

bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
j0=pfree[0]; cj0=cos(pfree[0]); sj0=sin(pfree[0]);
    vsolutions.resize(0); vsolutions.reserve(8);
    r00 = eerot[0*3+0];
    r01 = eerot[0*3+1];
    r02 = eerot[0*3+2];
    r10 = eerot[1*3+0];
    r11 = eerot[1*3+1];
    r12 = eerot[1*3+2];
    r20 = eerot[2*3+0];
    r21 = eerot[2*3+1];
    r22 = eerot[2*3+2];
    px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
    
    new_r00=r00;
    new_r01=r01;
    new_r02=r02;
    new_px=((-0.0290000000000000)+(((0.0270000003725290)*(r02)))+(((-0.178100000119209)*(r00)))+(px));
    new_r10=r10;
    new_r11=r11;
    new_r12=r12;
    new_py=((-0.0930000000000000)+(((0.0270000003725290)*(r12)))+(((-0.178100000119209)*(r10)))+(py));
    new_r20=r20;
    new_r21=r21;
    new_r22=r22;
    new_pz=((((0.0270000003725290)*(r22)))+(pz)+(((-0.178100000119209)*(r20))));
    r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
    {
        if( 1 )
        {
        {
        IKReal j3array[2], cj3array[2], sj3array[2];
        bool j3valid[2]={false};
        IKReal x0=(pz)*(pz);
        IKReal x1=((6.53497184283333)*(x0));
        IKReal x2=(py)*(py);
        IKReal x3=((6.53497184283333)*(x2));
        IKReal x4=(px)*(px);
        IKReal x5=((6.53497184283333)*(x4));
        IKReal x6=((-1.00533888481732)+(x3)+(x1)+(x5));
        if( (x6) < -1.0001 || (x6) > 1.0001 )
            continue;
        IKReal x7=IKasin(x6);
        j3array[0]=((-0.210315898570242)+(x7));
        sj3array[0]=IKsin(j3array[0]);
        cj3array[0]=IKcos(j3array[0]);
        j3array[1]=((2.93127675501955)+(((-1.00000000000000)*(x7))));
        sj3array[1]=IKsin(j3array[1]);
        cj3array[1]=IKcos(j3array[1]);
        if( j3array[0] > IKPI )
            j3array[0]-=IK2PI;
        else if( j3array[0] < -IKPI )
            j3array[0]+=IK2PI;
        j3valid[0] = true;
        if( j3array[1] > IKPI )
            j3array[1]-=IK2PI;
        else if( j3array[1] < -IKPI )
            j3array[1]+=IK2PI;
        j3valid[1] = true;
        if( j3valid[0] && j3valid[1] && IKabs(cj3array[0]-cj3array[1]) < 0.0001 && IKabs(sj3array[0]-sj3array[1]) < 0.0001 )
            j3valid[1]=false;
        for(int ij3 = 0; ij3 < 2; ++ij3)
        {
        if( !j3valid[ij3] ) { continue; }
        j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
        
        {
            IKReal j2eval[1];
            j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3))));
            if( IKabs(j2eval[0]) < 0.000001  )
            {
                {
                IKReal evalcond[3];
                    if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                        continue;
                    IKReal x8=IKasin(0.110398564068419);
                    IKReal x9=((1.68138208066057)+(x8));
                    IKReal x10=IKcos(x9);
                    IKReal x11=((0.0319464036001591)*(x10));
                    IKReal x12=x4;
                    IKReal x13=x2;
                    IKReal x14=x0;
                    IKReal x15=IKsin(x9);
                    evalcond[0]=IKfmod(((1.79200613704411)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                    evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x14)))+(((-1.00000000000000)*(x12)))+(((-1.00000000000000)*(x13)))+(((-0.149650991199451)*(x15)))+(x11));
                    evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x14)))+(((-1.00000000000000)*(x12)))+(((-1.00000000000000)*(x13)))+(x11)+(((-0.149650991197632)*(x15))));
                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  )
                    {
                    {
                        IKReal j2eval[1];
                        IKReal x16=x8;
                        IKReal x17=((1.68138208066057)+(x16));
                        j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(IKcos(x17))))+(((0.0289900000000216)*(IKsin(x17)))));
                        if( IKabs(j2eval[0]) < 0.000001  )
                        {
                            {
                                if( 1 )
                                {
                                {
                                    IKReal j1eval[1];
                                    if( ((((py)*(py))+((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))))) < (IKReal)-0.00001 )
                                        continue;
                                    j1eval[0]=IKabs(IKsqrt((((py)*(py))+((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            continue;
                                            
                                        } else
                                        {
                                        }
                                        }
                                        
                                    } else
                                    {
                                        {
                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                        bool j1valid[2]={false};
                                        IKReal x18=x8;
                                        IKReal x19=((1.68138208066057)+(x18));
                                        IKReal x20=((cj0)*(px));
                                        IKReal x21=((pz)*(sj0));
                                        IKReal x22=((((-1.00000000000000)*(x21)))+(x20));
                                        IKReal x23=x2;
                                        IKReal x24=(x22)*(x22);
                                        IKReal x25=((x24)+(x23));
                                        if( (x25) < (IKReal)-0.00001 )
                                            continue;
                                        IKReal x26=IKsqrt(x25);
                                        IKReal x27=IKabs(x26);
                                        IKReal x28=((IKabs(x27) != 0)?((IKReal)1/(x27)):(IKReal)1.0e30);
                                        IKReal x29=IKcos(x19);
                                        IKReal x30=((0.0289900000000216)*(x29));
                                        IKReal x31=((0.289820000001782)+(x30));
                                        IKReal x32=IKsin(x19);
                                        IKReal x33=((0.261080000000220)*(x32));
                                        IKReal x34=((((-1.00000000000000)*(x33)))+(x31));
                                        IKReal x35=((x28)*(x34));
                                        if( (x35) < -1.0001 || (x35) > 1.0001 )
                                            continue;
                                        IKReal x36=IKasin(x35);
                                        IKReal x37=((-1.00000000000000)*(py));
                                        IKReal x38=IKatan2(x37, x22);
                                        j1array[0]=((((-1.00000000000000)*(x38)))+(((-1.00000000000000)*(x36))));
                                        sj1array[0]=IKsin(j1array[0]);
                                        cj1array[0]=IKcos(j1array[0]);
                                        j1array[1]=((3.14159265358979)+(((-1.00000000000000)*(x38)))+(x36));
                                        sj1array[1]=IKsin(j1array[1]);
                                        cj1array[1]=IKcos(j1array[1]);
                                        if( j1array[0] > IKPI )
                                            j1array[0]-=IK2PI;
                                        else if( j1array[0] < -IKPI )
                                            j1array[0]+=IK2PI;
                                        j1valid[0] = true;
                                        if( j1array[1] > IKPI )
                                            j1array[1]-=IK2PI;
                                        else if( j1array[1] < -IKPI )
                                            j1array[1]+=IK2PI;
                                        j1valid[1] = true;
                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                            j1valid[1]=false;
                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        {
                                            IKReal j2eval[1];
                                            IKReal x39=x8;
                                            IKReal x40=((1.68138208066057)+(x39));
                                            j2eval[0]=((0.0289999999999964)+(((0.0289900000000216)*(IKsin(x40))))+(((0.261080000000220)*(IKcos(x40)))));
                                            if( IKabs(j2eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    continue;
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j2array[1], cj2array[1], sj2array[1];
                                                bool j2valid[1]={false};
                                                IKReal x41=x8;
                                                IKReal x42=((1.68138208066057)+(x41));
                                                IKReal x43=IKcos(x42);
                                                IKReal x44=((0.261080000000220)*(x43));
                                                IKReal x45=IKsin(x42);
                                                IKReal x46=((0.0289900000000216)*(x45));
                                                IKReal x47=((0.0289999999999964)+(x46)+(x44));
                                                IKReal x48=((IKabs(x47) != 0)?((IKReal)1/(x47)):(IKReal)1.0e30);
                                                j2array[0]=IKatan2(((x48)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((-1.00000000000000)*(x48)*(((((-1.00000000000000)*(cj0)*(cj1)*(px)))+(((-1.00000000000000)*(py)*(sj1)))+(((cj1)*(pz)*(sj0)))))));
                                                sj2array[0]=IKsin(j2array[0]);
                                                cj2array[0]=IKcos(j2array[0]);
                                                if( j2array[0] > IKPI )
                                                    j2array[0]-=IK2PI;
                                                else if( j2array[0] < -IKPI )
                                                    j2array[0]+=IK2PI;
                                                j2valid[0] = true;
                                                for(int ij2 = 0; ij2 < 1; ++ij2)
                                                {
                                                if( !j2valid[ij2] ) { continue; }
                                                j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        }
                                        }
                                        
                                    }
                                    
                                }
                                
                            } else
                            {
                            }
                            }
                            
                        } else
                        {
                            {
                            IKReal j2array[2], cj2array[2], sj2array[2];
                            bool j2valid[2]={false};
                            IKReal x89=x8;
                            IKReal x90=((1.68138208066057)+(x89));
                            IKReal x91=IKcos(x90);
                            IKReal x92=((0.261080000000220)*(x91));
                            IKReal x93=IKsin(x90);
                            IKReal x94=((0.0289900000000216)*(x93));
                            IKReal x95=((0.0289999999999964)+(x92)+(x94));
                            IKReal x96=((IKabs(x95) != 0)?((IKReal)1/(x95)):(IKReal)1.0e30);
                            sj2array[0]=((((-1.00000000000000)*(cj0)*(pz)*(x96)))+(((-1.00000000000000)*(px)*(sj0)*(x96))));
                            if( sj2array[0] >= -1.0001 && sj2array[0] <= 1.0001 )
                            {
                                j2valid[0] = j2valid[1] = true;
                                j2array[0] = IKasin(sj2array[0]);
                                cj2array[0] = IKcos(j2array[0]);
                                sj2array[1] = sj2array[0];
                                j2array[1] = j2array[0] > 0 ? (IKPI-j2array[0]) : (-IKPI-j2array[0]);
                                cj2array[1] = -cj2array[0];
                            }
                            else if( isnan(sj2array[0]) )
                            {
                                // probably any value will work
                                j2valid[0] = true;
                                cj2array[0] = 1; sj2array[0] = 0; j2array[0] = 0;
                            }
                            if( j2valid[0] && j2valid[1] && IKabs(cj2array[0]-cj2array[1]) < 0.0001 && IKabs(sj2array[0]-sj2array[1]) < 0.0001 )
                                j2valid[1]=false;
                            for(int ij2 = 0; ij2 < 2; ++ij2)
                            {
                            if( !j2valid[ij2] ) { continue; }
                            j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                            
                            {
                                IKReal j1eval[1];
                                j1eval[0]=((((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((pz)*(sj0)*(sj2)))+(((-1.00000000000000)*(cj0)*(px)*(sj2)))))))+(((-1.00000000000000)*(sj2)*((py)*(py)))));
                                if( IKabs(j1eval[0]) < 0.000001  )
                                {
                                    {
                                    IKReal evalcond[5];
                                        IKReal x97=x8;
                                        IKReal x98=((1.68138208066057)+(x97));
                                        IKReal x99=IKcos(x98);
                                        IKReal x100=((0.0319464036001591)*(x99));
                                        IKReal x101=x4;
                                        IKReal x102=x2;
                                        IKReal x103=x0;
                                        IKReal x104=IKsin(x98);
                                        IKReal x105=((px)*(sj0));
                                        IKReal x106=((cj0)*(pz));
                                        IKReal x107=((x105)+(x106));
                                        IKReal x108=((-1.00000000000000)*(x107));
                                        evalcond[0]=IKfmod(j2, ((2.00000000000000)*(3.14159265358979)));
                                        evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x101)))+(((-1.00000000000000)*(x103)))+(((-1.00000000000000)*(x102)))+(x100)+(((-0.149650991199451)*(x104))));
                                        evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x101)))+(((-1.00000000000000)*(x103)))+(((-1.00000000000000)*(x102)))+(x100)+(((-0.149650991197632)*(x104))));
                                        evalcond[3]=x108;
                                        evalcond[4]=x108;
                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                        {
                                        {
                                            IKReal j1eval[1];
                                            IKReal x109=((pz)*(sj0));
                                            IKReal x110=((cj0)*(px));
                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((((((-1.00000000000000)*(x109)))+(x110)))*(((((-1.00000000000000)*(x110)))+(x109))))));
                                            if( IKabs(j1eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    {
                                                        IKReal j1eval[1];
                                                        j1eval[0]=((((py)*(((((0.0579999999999927)*(py)))+(((-0.579640000003565)*(cj0)*(px)))+(((0.579640000003565)*(pz)*(sj0)))))))+(((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((0.0579999999999927)*(cj0)*(px)))+(((-0.0579999999999927)*(pz)*(sj0)))+(((0.579640000003565)*(py))))))));
                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                                if( 1 )
                                                                {
                                                                continue;
                                                                
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            
                                                        } else
                                                        {
                                                            {
                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                            bool j1valid[1]={false};
                                                            IKReal x111=x8;
                                                            IKReal x112=((1.68138208066057)+(x111));
                                                            IKReal x113=((0.0579999999999927)*(cj0)*(px));
                                                            IKReal x114=((0.579640000003565)*(py));
                                                            IKReal x115=((x113)+(x114));
                                                            IKReal x116=((0.0579999999999927)*(pz)*(sj0));
                                                            IKReal x117=((((-1.00000000000000)*(x116)))+(x115));
                                                            IKReal x118=((cj0)*(px));
                                                            IKReal x119=((pz)*(sj0));
                                                            IKReal x120=((((-1.00000000000000)*(x119)))+(x118));
                                                            IKReal x121=((x117)*(x120));
                                                            IKReal x122=((0.0579999999999927)*(py));
                                                            IKReal x123=((0.579640000003565)*(x119));
                                                            IKReal x124=((x122)+(x123));
                                                            IKReal x125=((0.579640000003565)*(x118));
                                                            IKReal x126=((((-1.00000000000000)*(x125)))+(x124));
                                                            IKReal x127=((py)*(x126));
                                                            IKReal x128=((x127)+(x121));
                                                            IKReal x129=((IKabs(x128) != 0)?((IKReal)1/(x128)):(IKReal)1.0e30);
                                                            IKReal x130=x4;
                                                            IKReal x131=x2;
                                                            IKReal x132=x0;
                                                            IKReal x133=((0.0158334459010803)+(x131)+(x130)+(x132));
                                                            IKReal x134=IKcos(x112);
                                                            IKReal x135=IKsin(x112);
                                                            IKReal x136=((0.261080000000220)*(x135));
                                                            j1array[0]=IKatan2(((x129)*(((((-1.00000000000000)*(x117)*(((0.289820000001782)+(((-0.261080000000220)*(x135)))+(((0.0289900000000216)*(x134)))))))+(((py)*(x133)))))), ((x129)*(((((x126)*(((0.289820000001782)+(((0.0289900000000216)*(x134)))+(((-1.00000000000000)*(x136)))))))+(((x120)*(x133)))))));
                                                            sj1array[0]=IKsin(j1array[0]);
                                                            cj1array[0]=IKcos(j1array[0]);
                                                            if( j1array[0] > IKPI )
                                                                j1array[0]-=IK2PI;
                                                            else if( j1array[0] < -IKPI )
                                                                j1array[0]+=IK2PI;
                                                            j1valid[0] = true;
                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                            {
                                                            if( !j1valid[ij1] ) { continue; }
                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                            
                                                        }
                                                        
                                                    }
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                bool j1valid[1]={false};
                                                IKReal x137=x8;
                                                IKReal x138=((1.68138208066057)+(x137));
                                                IKReal x139=IKcos(x138);
                                                IKReal x140=IKsin(x138);
                                                IKReal x141=((cj0)*(px));
                                                IKReal x142=((pz)*(sj0));
                                                IKReal x143=((((-1.00000000000000)*(x141)))+(x142));
                                                IKReal x144=((0.261080000000220)*(x140));
                                                IKReal x145=((((-1.00000000000000)*(x142)))+(x141));
                                                IKReal x146=((x143)*(x145));
                                                IKReal x147=x2;
                                                IKReal x148=((((-1.00000000000000)*(x147)))+(x146));
                                                IKReal x149=((IKabs(x148) != 0)?((IKReal)1/(x148)):(IKReal)1.0e30);
                                                j1array[0]=IKatan2(((x149)*(((((-1.00000000000000)*(x143)*(((0.289820000001782)+(((0.0289900000000216)*(x139)))+(((-0.261080000000220)*(x140)))))))+(((-1.00000000000000)*(py)*(((0.0289999999999964)+(((0.0289900000000216)*(x140)))+(((0.261080000000220)*(x139)))))))))), ((x149)*(((((-1.00000000000000)*(x145)*(((0.0289999999999964)+(((0.0289900000000216)*(x140)))+(((0.261080000000220)*(x139)))))))+(((-1.00000000000000)*(py)*(((0.289820000001782)+(((-1.00000000000000)*(x144)))+(((0.0289900000000216)*(x139)))))))))));
                                                sj1array[0]=IKsin(j1array[0]);
                                                cj1array[0]=IKcos(j1array[0]);
                                                if( j1array[0] > IKPI )
                                                    j1array[0]-=IK2PI;
                                                else if( j1array[0] < -IKPI )
                                                    j1array[0]+=IK2PI;
                                                j1valid[0] = true;
                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                {
                                                if( !j1valid[ij1] ) { continue; }
                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                        IKReal x150=x8;
                                        IKReal x151=((1.68138208066057)+(x150));
                                        IKReal x152=IKcos(x151);
                                        IKReal x153=((0.0319464036001591)*(x152));
                                        IKReal x154=x4;
                                        IKReal x155=x2;
                                        IKReal x156=x0;
                                        IKReal x157=IKsin(x151);
                                        IKReal x158=((px)*(sj0));
                                        IKReal x159=((cj0)*(pz));
                                        IKReal x160=((x159)+(x158));
                                        evalcond[0]=IKfmod(((-3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)));
                                        evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x154)))+(((-1.00000000000000)*(x155)))+(((-1.00000000000000)*(x156)))+(x153)+(((-0.149650991199451)*(x157))));
                                        evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x154)))+(((-1.00000000000000)*(x155)))+(((-1.00000000000000)*(x156)))+(x153)+(((-0.149650991197632)*(x157))));
                                        evalcond[3]=((-1.00000000000000)*(x160));
                                        evalcond[4]=x160;
                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                        {
                                        {
                                            IKReal j1eval[1];
                                            IKReal x161=((pz)*(sj0));
                                            IKReal x162=((cj0)*(px));
                                            j1eval[0]=((((((((-1.00000000000000)*(x161)))+(x162)))*(((((-1.00000000000000)*(x162)))+(x161)))))+(((-1.00000000000000)*((py)*(py)))));
                                            if( IKabs(j1eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    {
                                                        IKReal j1eval[1];
                                                        j1eval[0]=((((py)*(((((-0.0579999999999927)*(py)))+(((-0.579640000003565)*(cj0)*(px)))+(((0.579640000003565)*(pz)*(sj0)))))))+(((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((-0.0579999999999927)*(cj0)*(px)))+(((0.0579999999999927)*(pz)*(sj0)))+(((0.579640000003565)*(py))))))));
                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                                if( 1 )
                                                                {
                                                                continue;
                                                                
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            
                                                        } else
                                                        {
                                                            {
                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                            bool j1valid[1]={false};
                                                            IKReal x163=x8;
                                                            IKReal x164=((1.68138208066057)+(x163));
                                                            IKReal x165=((0.0579999999999927)*(pz)*(sj0));
                                                            IKReal x166=((0.579640000003565)*(py));
                                                            IKReal x167=((x166)+(x165));
                                                            IKReal x168=((0.0579999999999927)*(cj0)*(px));
                                                            IKReal x169=((((-1.00000000000000)*(x168)))+(x167));
                                                            IKReal x170=((cj0)*(px));
                                                            IKReal x171=((pz)*(sj0));
                                                            IKReal x172=((((-1.00000000000000)*(x171)))+(x170));
                                                            IKReal x173=((x169)*(x172));
                                                            IKReal x174=((0.579640000003565)*(x171));
                                                            IKReal x175=((0.0579999999999927)*(py));
                                                            IKReal x176=((0.579640000003565)*(x170));
                                                            IKReal x177=((x175)+(x176));
                                                            IKReal x178=((((-1.00000000000000)*(x177)))+(x174));
                                                            IKReal x179=((py)*(x178));
                                                            IKReal x180=((x179)+(x173));
                                                            IKReal x181=((IKabs(x180) != 0)?((IKReal)1/(x180)):(IKReal)1.0e30);
                                                            IKReal x182=IKcos(x164);
                                                            IKReal x183=IKsin(x164);
                                                            IKReal x184=((0.261080000000220)*(x183));
                                                            IKReal x185=x4;
                                                            IKReal x186=x2;
                                                            IKReal x187=x0;
                                                            IKReal x188=((0.0158334459010803)+(x185)+(x186)+(x187));
                                                            j1array[0]=IKatan2(((x181)*(((((-1.00000000000000)*(x169)*(((0.289820000001782)+(((0.0289900000000216)*(x182)))+(((-0.261080000000220)*(x183)))))))+(((py)*(x188)))))), ((x181)*(((((x172)*(x188)))+(((x178)*(((0.289820000001782)+(((0.0289900000000216)*(x182)))+(((-1.00000000000000)*(x184)))))))))));
                                                            sj1array[0]=IKsin(j1array[0]);
                                                            cj1array[0]=IKcos(j1array[0]);
                                                            if( j1array[0] > IKPI )
                                                                j1array[0]-=IK2PI;
                                                            else if( j1array[0] < -IKPI )
                                                                j1array[0]+=IK2PI;
                                                            j1valid[0] = true;
                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                            {
                                                            if( !j1valid[ij1] ) { continue; }
                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                            
                                                        }
                                                        
                                                    }
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                bool j1valid[1]={false};
                                                IKReal x189=x8;
                                                IKReal x190=((1.68138208066057)+(x189));
                                                IKReal x191=IKcos(x190);
                                                IKReal x192=IKsin(x190);
                                                IKReal x193=((cj0)*(px));
                                                IKReal x194=((pz)*(sj0));
                                                IKReal x195=((((-1.00000000000000)*(x193)))+(x194));
                                                IKReal x196=((0.261080000000220)*(x192));
                                                IKReal x197=((0.261080000000220)*(x191));
                                                IKReal x198=((0.0289900000000216)*(x192));
                                                IKReal x199=((0.0289999999999964)+(x198)+(x197));
                                                IKReal x200=((((-1.00000000000000)*(x194)))+(x193));
                                                IKReal x201=((x195)*(x200));
                                                IKReal x202=x2;
                                                IKReal x203=((((-1.00000000000000)*(x202)))+(x201));
                                                IKReal x204=((IKabs(x203) != 0)?((IKReal)1/(x203)):(IKReal)1.0e30);
                                                j1array[0]=IKatan2(((x204)*(((((-1.00000000000000)*(x195)*(((0.289820000001782)+(((0.0289900000000216)*(x191)))+(((-0.261080000000220)*(x192)))))))+(((py)*(x199)))))), ((x204)*(((((-1.00000000000000)*(py)*(((0.289820000001782)+(((0.0289900000000216)*(x191)))+(((-1.00000000000000)*(x196)))))))+(((x199)*(x200)))))));
                                                sj1array[0]=IKsin(j1array[0]);
                                                cj1array[0]=IKcos(j1array[0]);
                                                if( j1array[0] > IKPI )
                                                    j1array[0]-=IK2PI;
                                                else if( j1array[0] < -IKPI )
                                                    j1array[0]+=IK2PI;
                                                j1valid[0] = true;
                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                {
                                                if( !j1valid[ij1] ) { continue; }
                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                        if( 1 )
                                        {
                                        {
                                            IKReal j1eval[1];
                                            IKReal x205=((pz)*(sj0));
                                            IKReal x206=((cj0)*(px));
                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((((((-1.00000000000000)*(x205)))+(x206)))*(((((-1.00000000000000)*(x206)))+(x205))))));
                                            if( IKabs(j1eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    continue;
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                bool j1valid[1]={false};
                                                IKReal x207=x8;
                                                IKReal x208=((1.68138208066057)+(x207));
                                                IKReal x209=IKsin(x208);
                                                IKReal x210=IKcos(x208);
                                                IKReal x211=((cj0)*(px));
                                                IKReal x212=((pz)*(sj0));
                                                IKReal x213=((x212)+(((-1.00000000000000)*(x211))));
                                                IKReal x214=((0.261080000000220)*(x209));
                                                IKReal x215=((x211)+(((-1.00000000000000)*(x212))));
                                                IKReal x216=((x213)*(x215));
                                                IKReal x217=x2;
                                                IKReal x218=((x216)+(((-1.00000000000000)*(x217))));
                                                IKReal x219=((IKabs(x218) != 0)?((IKReal)1/(x218)):(IKReal)1.0e30);
                                                j1array[0]=IKatan2(((x219)*(((((-1.00000000000000)*(py)*(((((0.0289999999999964)*(cj2)))+(((0.261080000000220)*(cj2)*(x210)))+(((0.0289900000000216)*(cj2)*(x209)))))))+(((-1.00000000000000)*(x213)*(((0.289820000001782)+(((-0.261080000000220)*(x209)))+(((0.0289900000000216)*(x210)))))))))), ((x219)*(((((x215)*(((((-0.0289900000000216)*(cj2)*(x209)))+(((-0.261080000000220)*(cj2)*(x210)))+(((-0.0289999999999964)*(cj2)))))))+(((-1.00000000000000)*(py)*(((0.289820000001782)+(((-1.00000000000000)*(x214)))+(((0.0289900000000216)*(x210)))))))))));
                                                sj1array[0]=IKsin(j1array[0]);
                                                cj1array[0]=IKcos(j1array[0]);
                                                if( j1array[0] > IKPI )
                                                    j1array[0]-=IK2PI;
                                                else if( j1array[0] < -IKPI )
                                                    j1array[0]+=IK2PI;
                                                j1valid[0] = true;
                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                {
                                                if( !j1valid[ij1] ) { continue; }
                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                    }
                                    }
                                    }
                                    }
                                    
                                } else
                                {
                                    {
                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                    bool j1valid[1]={false};
                                    IKReal x220=x8;
                                    IKReal x221=((1.68138208066057)+(x220));
                                    IKReal x222=((pz)*(sj0)*(sj2));
                                    IKReal x223=((cj0)*(px)*(sj2));
                                    IKReal x224=((x222)+(((-1.00000000000000)*(x223))));
                                    IKReal x225=((cj2)*(px)*(sj0));
                                    IKReal x226=((cj0)*(cj2)*(pz));
                                    IKReal x227=((x225)+(x226));
                                    IKReal x228=((cj0)*(px));
                                    IKReal x229=((pz)*(sj0));
                                    IKReal x230=((x228)+(((-1.00000000000000)*(x229))));
                                    IKReal x231=IKcos(x221);
                                    IKReal x232=IKsin(x221);
                                    IKReal x233=((0.261080000000220)*(x232));
                                    IKReal x234=((x224)*(x230));
                                    IKReal x235=x2;
                                    IKReal x236=((sj2)*(x235));
                                    IKReal x237=((((-1.00000000000000)*(x236)))+(x234));
                                    IKReal x238=((IKabs(x237) != 0)?((IKReal)1/(x237)):(IKReal)1.0e30);
                                    j1array[0]=IKatan2(((x238)*(((((py)*(x227)))+(((-1.00000000000000)*(x224)*(((0.289820000001782)+(((-0.261080000000220)*(x232)))+(((0.0289900000000216)*(x231)))))))))), ((x238)*(((((x227)*(x230)))+(((-1.00000000000000)*(py)*(sj2)*(((0.289820000001782)+(((0.0289900000000216)*(x231)))+(((-1.00000000000000)*(x233)))))))))));
                                    sj1array[0]=IKsin(j1array[0]);
                                    cj1array[0]=IKcos(j1array[0]);
                                    if( j1array[0] > IKPI )
                                        j1array[0]-=IK2PI;
                                    else if( j1array[0] < -IKPI )
                                        j1array[0]+=IK2PI;
                                    j1valid[0] = true;
                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                    {
                                    if( !j1valid[ij1] ) { continue; }
                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                    
                                    rotationfunction0(vsolutions);
                                    }
                                    }
                                    
                                }
                                
                            }
                            }
                            }
                            
                        }
                        
                    }
                    
                } else
                {
                    if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                        continue;
                    IKReal x239=IKasin(0.110398564068419);
                    IKReal x240=((1.46021057292922)+(x239));
                    IKReal x241=IKsin(x240);
                    IKReal x242=IKcos(x240);
                    IKReal x243=((0.0319464036001591)*(x242));
                    IKReal x244=x4;
                    IKReal x245=x2;
                    IKReal x246=x0;
                    IKReal x247=((x246)+(x245)+(x244));
                    evalcond[0]=IKfmod(((-1.57083462931276)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                    evalcond[1]=((0.153839818900451)+(((0.149650991199451)*(x241)))+(x243)+(((-1.00000000000000)*(x247))));
                    evalcond[2]=((0.153839818898632)+(((0.149650991197632)*(x241)))+(x243)+(((-1.00000000000000)*(x247))));
                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  )
                    {
                    {
                        IKReal j2eval[1];
                        IKReal x248=x239;
                        IKReal x249=((1.46021057292922)+(x248));
                        j2eval[0]=((0.0289999999999964)+(((-0.0289900000000216)*(IKsin(x249))))+(((0.261080000000220)*(IKcos(x249)))));
                        if( IKabs(j2eval[0]) < 0.000001  )
                        {
                            {
                                if( 1 )
                                {
                                {
                                    IKReal j1eval[1];
                                    if( ((((py)*(py))+((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))))) < (IKReal)-0.00001 )
                                        continue;
                                    j1eval[0]=IKabs(IKsqrt((((py)*(py))+((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))))));
                                    if( IKabs(j1eval[0]) < 0.000001  )
                                    {
                                        {
                                            if( 1 )
                                            {
                                            continue;
                                            
                                        } else
                                        {
                                        }
                                        }
                                        
                                    } else
                                    {
                                        {
                                        IKReal j1array[2], cj1array[2], sj1array[2];
                                        bool j1valid[2]={false};
                                        IKReal x250=((cj0)*(px));
                                        IKReal x251=((pz)*(sj0));
                                        IKReal x252=((x250)+(((-1.00000000000000)*(x251))));
                                        IKReal x253=x239;
                                        IKReal x254=((1.46021057292922)+(x253));
                                        IKReal x255=x2;
                                        IKReal x256=(x252)*(x252);
                                        IKReal x257=((x255)+(x256));
                                        if( (x257) < (IKReal)-0.00001 )
                                            continue;
                                        IKReal x258=IKsqrt(x257);
                                        IKReal x259=IKabs(x258);
                                        IKReal x260=((IKabs(x259) != 0)?((IKReal)1/(x259)):(IKReal)1.0e30);
                                        IKReal x261=IKcos(x254);
                                        IKReal x262=((0.0289900000000216)*(x261));
                                        IKReal x263=IKsin(x254);
                                        IKReal x264=((0.261080000000220)*(x263));
                                        IKReal x265=((0.289820000001782)+(x264)+(x262));
                                        IKReal x266=((x260)*(x265));
                                        if( (x266) < -1.0001 || (x266) > 1.0001 )
                                            continue;
                                        IKReal x267=IKasin(x266);
                                        IKReal x268=((-1.00000000000000)*(py));
                                        IKReal x269=IKatan2(x268, x252);
                                        j1array[0]=((((-1.00000000000000)*(x267)))+(((-1.00000000000000)*(x269))));
                                        sj1array[0]=IKsin(j1array[0]);
                                        cj1array[0]=IKcos(j1array[0]);
                                        j1array[1]=((3.14159265358979)+(x267)+(((-1.00000000000000)*(x269))));
                                        sj1array[1]=IKsin(j1array[1]);
                                        cj1array[1]=IKcos(j1array[1]);
                                        if( j1array[0] > IKPI )
                                            j1array[0]-=IK2PI;
                                        else if( j1array[0] < -IKPI )
                                            j1array[0]+=IK2PI;
                                        j1valid[0] = true;
                                        if( j1array[1] > IKPI )
                                            j1array[1]-=IK2PI;
                                        else if( j1array[1] < -IKPI )
                                            j1array[1]+=IK2PI;
                                        j1valid[1] = true;
                                        if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                            j1valid[1]=false;
                                        for(int ij1 = 0; ij1 < 2; ++ij1)
                                        {
                                        if( !j1valid[ij1] ) { continue; }
                                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                        
                                        {
                                            IKReal j2eval[1];
                                            IKReal x270=x239;
                                            IKReal x271=((1.46021057292922)+(x270));
                                            j2eval[0]=((0.0289999999999964)+(((-0.0289900000000216)*(IKsin(x271))))+(((0.261080000000220)*(IKcos(x271)))));
                                            if( IKabs(j2eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    continue;
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j2array[1], cj2array[1], sj2array[1];
                                                bool j2valid[1]={false};
                                                IKReal x272=x239;
                                                IKReal x273=((1.46021057292922)+(x272));
                                                IKReal x274=IKcos(x273);
                                                IKReal x275=((0.261080000000220)*(x274));
                                                IKReal x276=((0.0289999999999964)+(x275));
                                                IKReal x277=IKsin(x273);
                                                IKReal x278=((0.0289900000000216)*(x277));
                                                IKReal x279=((x276)+(((-1.00000000000000)*(x278))));
                                                IKReal x280=((IKabs(x279) != 0)?((IKReal)1/(x279)):(IKReal)1.0e30);
                                                j2array[0]=IKatan2(((x280)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x280)*(((((cj0)*(cj1)*(px)))+(((-1.00000000000000)*(cj1)*(pz)*(sj0)))+(((py)*(sj1)))))));
                                                sj2array[0]=IKsin(j2array[0]);
                                                cj2array[0]=IKcos(j2array[0]);
                                                if( j2array[0] > IKPI )
                                                    j2array[0]-=IK2PI;
                                                else if( j2array[0] < -IKPI )
                                                    j2array[0]+=IK2PI;
                                                j2valid[0] = true;
                                                for(int ij2 = 0; ij2 < 1; ++ij2)
                                                {
                                                if( !j2valid[ij2] ) { continue; }
                                                j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        }
                                        }
                                        
                                    }
                                    
                                }
                                
                            } else
                            {
                            }
                            }
                            
                        } else
                        {
                            {
                            IKReal j2array[2], cj2array[2], sj2array[2];
                            bool j2valid[2]={false};
                            IKReal x281=x239;
                            IKReal x282=((1.46021057292922)+(x281));
                            IKReal x283=IKcos(x282);
                            IKReal x284=((0.261080000000220)*(x283));
                            IKReal x285=((0.0289999999999964)+(x284));
                            IKReal x286=IKsin(x282);
                            IKReal x287=((0.0289900000000216)*(x286));
                            IKReal x288=((x285)+(((-1.00000000000000)*(x287))));
                            IKReal x289=((IKabs(x288) != 0)?((IKReal)1/(x288)):(IKReal)1.0e30);
                            sj2array[0]=((((-1.00000000000000)*(cj0)*(pz)*(x289)))+(((-1.00000000000000)*(px)*(sj0)*(x289))));
                            if( sj2array[0] >= -1.0001 && sj2array[0] <= 1.0001 )
                            {
                                j2valid[0] = j2valid[1] = true;
                                j2array[0] = IKasin(sj2array[0]);
                                cj2array[0] = IKcos(j2array[0]);
                                sj2array[1] = sj2array[0];
                                j2array[1] = j2array[0] > 0 ? (IKPI-j2array[0]) : (-IKPI-j2array[0]);
                                cj2array[1] = -cj2array[0];
                            }
                            else if( isnan(sj2array[0]) )
                            {
                                // probably any value will work
                                j2valid[0] = true;
                                cj2array[0] = 1; sj2array[0] = 0; j2array[0] = 0;
                            }
                            if( j2valid[0] && j2valid[1] && IKabs(cj2array[0]-cj2array[1]) < 0.0001 && IKabs(sj2array[0]-sj2array[1]) < 0.0001 )
                                j2valid[1]=false;
                            for(int ij2 = 0; ij2 < 2; ++ij2)
                            {
                            if( !j2valid[ij2] ) { continue; }
                            j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                            
                            {
                                IKReal j1eval[1];
                                j1eval[0]=((((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((pz)*(sj0)*(sj2)))+(((-1.00000000000000)*(cj0)*(px)*(sj2)))))))+(((-1.00000000000000)*(sj2)*((py)*(py)))));
                                if( IKabs(j1eval[0]) < 0.000001  )
                                {
                                    {
                                    IKReal evalcond[5];
                                        IKReal x290=x239;
                                        IKReal x291=((1.46021057292922)+(x290));
                                        IKReal x292=IKsin(x291);
                                        IKReal x293=IKcos(x291);
                                        IKReal x294=((0.0319464036001591)*(x293));
                                        IKReal x295=x4;
                                        IKReal x296=x2;
                                        IKReal x297=x0;
                                        IKReal x298=((x295)+(x296)+(x297));
                                        IKReal x299=((px)*(sj0));
                                        IKReal x300=((cj0)*(pz));
                                        IKReal x301=((x300)+(x299));
                                        IKReal x302=((-1.00000000000000)*(x301));
                                        evalcond[0]=IKfmod(j2, ((2.00000000000000)*(3.14159265358979)));
                                        evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x298)))+(x294)+(((0.149650991199451)*(x292))));
                                        evalcond[2]=((0.153839818898632)+(((0.149650991197632)*(x292)))+(((-1.00000000000000)*(x298)))+(x294));
                                        evalcond[3]=x302;
                                        evalcond[4]=x302;
                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                        {
                                        {
                                            IKReal j1eval[1];
                                            IKReal x303=((pz)*(sj0));
                                            IKReal x304=((cj0)*(px));
                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((((x303)+(((-1.00000000000000)*(x304)))))*(((x304)+(((-1.00000000000000)*(x303))))))));
                                            if( IKabs(j1eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    {
                                                        IKReal j1eval[1];
                                                        j1eval[0]=((((py)*(((((0.0579999999999927)*(py)))+(((-0.579640000003565)*(cj0)*(px)))+(((0.579640000003565)*(pz)*(sj0)))))))+(((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((0.0579999999999927)*(cj0)*(px)))+(((-0.0579999999999927)*(pz)*(sj0)))+(((0.579640000003565)*(py))))))));
                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                                if( 1 )
                                                                {
                                                                continue;
                                                                
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            
                                                        } else
                                                        {
                                                            {
                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                            bool j1valid[1]={false};
                                                            IKReal x305=x239;
                                                            IKReal x306=((1.46021057292922)+(x305));
                                                            IKReal x307=((0.0579999999999927)*(cj0)*(px));
                                                            IKReal x308=((0.579640000003565)*(py));
                                                            IKReal x309=((x308)+(x307));
                                                            IKReal x310=((0.0579999999999927)*(pz)*(sj0));
                                                            IKReal x311=((x309)+(((-1.00000000000000)*(x310))));
                                                            IKReal x312=((cj0)*(px));
                                                            IKReal x313=((pz)*(sj0));
                                                            IKReal x314=((x312)+(((-1.00000000000000)*(x313))));
                                                            IKReal x315=((x311)*(x314));
                                                            IKReal x316=((0.0579999999999927)*(py));
                                                            IKReal x317=((0.579640000003565)*(x313));
                                                            IKReal x318=((x317)+(x316));
                                                            IKReal x319=((0.579640000003565)*(x312));
                                                            IKReal x320=((x318)+(((-1.00000000000000)*(x319))));
                                                            IKReal x321=((py)*(x320));
                                                            IKReal x322=((x321)+(x315));
                                                            IKReal x323=((IKabs(x322) != 0)?((IKReal)1/(x322)):(IKReal)1.0e30);
                                                            IKReal x324=x4;
                                                            IKReal x325=x2;
                                                            IKReal x326=x0;
                                                            IKReal x327=((0.0158334459010803)+(x324)+(x325)+(x326));
                                                            IKReal x328=IKcos(x306);
                                                            IKReal x329=IKsin(x306);
                                                            j1array[0]=IKatan2(((x323)*(((((py)*(x327)))+(((-1.00000000000000)*(x311)*(((0.289820000001782)+(((0.0289900000000216)*(x328)))+(((0.261080000000220)*(x329)))))))))), ((x323)*(((((x314)*(x327)))+(((x320)*(((0.289820000001782)+(((0.0289900000000216)*(x328)))+(((0.261080000000220)*(x329)))))))))));
                                                            sj1array[0]=IKsin(j1array[0]);
                                                            cj1array[0]=IKcos(j1array[0]);
                                                            if( j1array[0] > IKPI )
                                                                j1array[0]-=IK2PI;
                                                            else if( j1array[0] < -IKPI )
                                                                j1array[0]+=IK2PI;
                                                            j1valid[0] = true;
                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                            {
                                                            if( !j1valid[ij1] ) { continue; }
                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                            
                                                        }
                                                        
                                                    }
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                bool j1valid[1]={false};
                                                IKReal x330=x239;
                                                IKReal x331=((1.46021057292922)+(x330));
                                                IKReal x332=IKcos(x331);
                                                IKReal x333=IKsin(x331);
                                                IKReal x334=((cj0)*(px));
                                                IKReal x335=((pz)*(sj0));
                                                IKReal x336=((x335)+(((-1.00000000000000)*(x334))));
                                                IKReal x337=((0.0289900000000216)*(x333));
                                                IKReal x338=((x334)+(((-1.00000000000000)*(x335))));
                                                IKReal x339=((x336)*(x338));
                                                IKReal x340=x2;
                                                IKReal x341=((x339)+(((-1.00000000000000)*(x340))));
                                                IKReal x342=((IKabs(x341) != 0)?((IKReal)1/(x341)):(IKReal)1.0e30);
                                                j1array[0]=IKatan2(((x342)*(((((-1.00000000000000)*(x336)*(((0.289820000001782)+(((0.261080000000220)*(x333)))+(((0.0289900000000216)*(x332)))))))+(((-1.00000000000000)*(py)*(((0.0289999999999964)+(((0.261080000000220)*(x332)))+(((-1.00000000000000)*(x337)))))))))), ((x342)*(((((-1.00000000000000)*(py)*(((0.289820000001782)+(((0.261080000000220)*(x333)))+(((0.0289900000000216)*(x332)))))))+(((-1.00000000000000)*(x338)*(((0.0289999999999964)+(((0.261080000000220)*(x332)))+(((-1.00000000000000)*(x337)))))))))));
                                                sj1array[0]=IKsin(j1array[0]);
                                                cj1array[0]=IKcos(j1array[0]);
                                                if( j1array[0] > IKPI )
                                                    j1array[0]-=IK2PI;
                                                else if( j1array[0] < -IKPI )
                                                    j1array[0]+=IK2PI;
                                                j1valid[0] = true;
                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                {
                                                if( !j1valid[ij1] ) { continue; }
                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                        IKReal x343=x239;
                                        IKReal x344=((1.46021057292922)+(x343));
                                        IKReal x345=IKsin(x344);
                                        IKReal x346=IKcos(x344);
                                        IKReal x347=((0.0319464036001591)*(x346));
                                        IKReal x348=x4;
                                        IKReal x349=x2;
                                        IKReal x350=x0;
                                        IKReal x351=((x350)+(x348)+(x349));
                                        IKReal x352=((px)*(sj0));
                                        IKReal x353=((cj0)*(pz));
                                        IKReal x354=((x353)+(x352));
                                        evalcond[0]=IKfmod(((-3.14159265358979)+(j2)), ((2.00000000000000)*(3.14159265358979)));
                                        evalcond[1]=((0.153839818900451)+(((0.149650991199451)*(x345)))+(((-1.00000000000000)*(x351)))+(x347));
                                        evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x351)))+(x347)+(((0.149650991197632)*(x345))));
                                        evalcond[3]=((-1.00000000000000)*(x354));
                                        evalcond[4]=x354;
                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                        {
                                        {
                                            IKReal j1eval[1];
                                            IKReal x355=((pz)*(sj0));
                                            IKReal x356=((cj0)*(px));
                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((((((-1.00000000000000)*(x355)))+(x356)))*(((((-1.00000000000000)*(x356)))+(x355))))));
                                            if( IKabs(j1eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    {
                                                        IKReal j1eval[1];
                                                        j1eval[0]=((((py)*(((((-0.0579999999999927)*(py)))+(((-0.579640000003565)*(cj0)*(px)))+(((0.579640000003565)*(pz)*(sj0)))))))+(((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((-0.0579999999999927)*(cj0)*(px)))+(((0.0579999999999927)*(pz)*(sj0)))+(((0.579640000003565)*(py))))))));
                                                        if( IKabs(j1eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                                if( 1 )
                                                                {
                                                                continue;
                                                                
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            
                                                        } else
                                                        {
                                                            {
                                                            IKReal j1array[1], cj1array[1], sj1array[1];
                                                            bool j1valid[1]={false};
                                                            IKReal x357=x239;
                                                            IKReal x358=((1.46021057292922)+(x357));
                                                            IKReal x359=((0.0579999999999927)*(pz)*(sj0));
                                                            IKReal x360=((0.579640000003565)*(py));
                                                            IKReal x361=((x359)+(x360));
                                                            IKReal x362=((0.0579999999999927)*(cj0)*(px));
                                                            IKReal x363=((((-1.00000000000000)*(x362)))+(x361));
                                                            IKReal x364=((cj0)*(px));
                                                            IKReal x365=((pz)*(sj0));
                                                            IKReal x366=((((-1.00000000000000)*(x365)))+(x364));
                                                            IKReal x367=((x363)*(x366));
                                                            IKReal x368=((0.579640000003565)*(x365));
                                                            IKReal x369=((0.0579999999999927)*(py));
                                                            IKReal x370=((0.579640000003565)*(x364));
                                                            IKReal x371=((x370)+(x369));
                                                            IKReal x372=((((-1.00000000000000)*(x371)))+(x368));
                                                            IKReal x373=((py)*(x372));
                                                            IKReal x374=((x373)+(x367));
                                                            IKReal x375=((IKabs(x374) != 0)?((IKReal)1/(x374)):(IKReal)1.0e30);
                                                            IKReal x376=x4;
                                                            IKReal x377=x2;
                                                            IKReal x378=x0;
                                                            IKReal x379=((0.0158334459010803)+(x378)+(x377)+(x376));
                                                            IKReal x380=IKcos(x358);
                                                            IKReal x381=IKsin(x358);
                                                            j1array[0]=IKatan2(((x375)*(((((-1.00000000000000)*(x363)*(((0.289820000001782)+(((0.261080000000220)*(x381)))+(((0.0289900000000216)*(x380)))))))+(((py)*(x379)))))), ((x375)*(((((x366)*(x379)))+(((x372)*(((0.289820000001782)+(((0.261080000000220)*(x381)))+(((0.0289900000000216)*(x380)))))))))));
                                                            sj1array[0]=IKsin(j1array[0]);
                                                            cj1array[0]=IKcos(j1array[0]);
                                                            if( j1array[0] > IKPI )
                                                                j1array[0]-=IK2PI;
                                                            else if( j1array[0] < -IKPI )
                                                                j1array[0]+=IK2PI;
                                                            j1valid[0] = true;
                                                            for(int ij1 = 0; ij1 < 1; ++ij1)
                                                            {
                                                            if( !j1valid[ij1] ) { continue; }
                                                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                            
                                                        }
                                                        
                                                    }
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                bool j1valid[1]={false};
                                                IKReal x382=x239;
                                                IKReal x383=((1.46021057292922)+(x382));
                                                IKReal x384=IKcos(x383);
                                                IKReal x385=IKsin(x383);
                                                IKReal x386=((cj0)*(px));
                                                IKReal x387=((pz)*(sj0));
                                                IKReal x388=((x387)+(((-1.00000000000000)*(x386))));
                                                IKReal x389=((0.261080000000220)*(x384));
                                                IKReal x390=((0.0289999999999964)+(x389));
                                                IKReal x391=((0.0289900000000216)*(x385));
                                                IKReal x392=((((-1.00000000000000)*(x391)))+(x390));
                                                IKReal x393=((x386)+(((-1.00000000000000)*(x387))));
                                                IKReal x394=((x388)*(x393));
                                                IKReal x395=x2;
                                                IKReal x396=((((-1.00000000000000)*(x395)))+(x394));
                                                IKReal x397=((IKabs(x396) != 0)?((IKReal)1/(x396)):(IKReal)1.0e30);
                                                j1array[0]=IKatan2(((x397)*(((((py)*(x392)))+(((-1.00000000000000)*(x388)*(((0.289820000001782)+(((0.261080000000220)*(x385)))+(((0.0289900000000216)*(x384)))))))))), ((x397)*(((((-1.00000000000000)*(py)*(((0.289820000001782)+(((0.261080000000220)*(x385)))+(((0.0289900000000216)*(x384)))))))+(((x392)*(x393)))))));
                                                sj1array[0]=IKsin(j1array[0]);
                                                cj1array[0]=IKcos(j1array[0]);
                                                if( j1array[0] > IKPI )
                                                    j1array[0]-=IK2PI;
                                                else if( j1array[0] < -IKPI )
                                                    j1array[0]+=IK2PI;
                                                j1valid[0] = true;
                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                {
                                                if( !j1valid[ij1] ) { continue; }
                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                        if( 1 )
                                        {
                                        {
                                            IKReal j1eval[1];
                                            IKReal x398=((pz)*(sj0));
                                            IKReal x399=((cj0)*(px));
                                            j1eval[0]=((((-1.00000000000000)*((py)*(py))))+(((((((-1.00000000000000)*(x398)))+(x399)))*(((((-1.00000000000000)*(x399)))+(x398))))));
                                            if( IKabs(j1eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    continue;
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j1array[1], cj1array[1], sj1array[1];
                                                bool j1valid[1]={false};
                                                IKReal x400=x239;
                                                IKReal x401=((1.46021057292922)+(x400));
                                                IKReal x402=IKcos(x401);
                                                IKReal x403=IKsin(x401);
                                                IKReal x404=((cj0)*(px));
                                                IKReal x405=((pz)*(sj0));
                                                IKReal x406=((x405)+(((-1.00000000000000)*(x404))));
                                                IKReal x407=((0.0289900000000216)*(cj2)*(x403));
                                                IKReal x408=((x404)+(((-1.00000000000000)*(x405))));
                                                IKReal x409=((x406)*(x408));
                                                IKReal x410=x2;
                                                IKReal x411=((x409)+(((-1.00000000000000)*(x410))));
                                                IKReal x412=((IKabs(x411) != 0)?((IKReal)1/(x411)):(IKReal)1.0e30);
                                                j1array[0]=IKatan2(((x412)*(((((-1.00000000000000)*(py)*(((((0.0289999999999964)*(cj2)))+(((0.261080000000220)*(cj2)*(x402)))+(((-1.00000000000000)*(x407)))))))+(((-1.00000000000000)*(x406)*(((0.289820000001782)+(((0.261080000000220)*(x403)))+(((0.0289900000000216)*(x402)))))))))), ((x412)*(((((-1.00000000000000)*(py)*(((0.289820000001782)+(((0.261080000000220)*(x403)))+(((0.0289900000000216)*(x402)))))))+(((x408)*(((((-0.261080000000220)*(cj2)*(x402)))+(x407)+(((-0.0289999999999964)*(cj2)))))))))));
                                                sj1array[0]=IKsin(j1array[0]);
                                                cj1array[0]=IKcos(j1array[0]);
                                                if( j1array[0] > IKPI )
                                                    j1array[0]-=IK2PI;
                                                else if( j1array[0] < -IKPI )
                                                    j1array[0]+=IK2PI;
                                                j1valid[0] = true;
                                                for(int ij1 = 0; ij1 < 1; ++ij1)
                                                {
                                                if( !j1valid[ij1] ) { continue; }
                                                j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                    }
                                    }
                                    }
                                    }
                                    
                                } else
                                {
                                    {
                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                    bool j1valid[1]={false};
                                    IKReal x413=x239;
                                    IKReal x414=((1.46021057292922)+(x413));
                                    IKReal x415=((pz)*(sj0)*(sj2));
                                    IKReal x416=((cj0)*(px)*(sj2));
                                    IKReal x417=((x415)+(((-1.00000000000000)*(x416))));
                                    IKReal x418=((cj2)*(px)*(sj0));
                                    IKReal x419=((cj0)*(cj2)*(pz));
                                    IKReal x420=((x418)+(x419));
                                    IKReal x421=((cj0)*(px));
                                    IKReal x422=((pz)*(sj0));
                                    IKReal x423=((((-1.00000000000000)*(x422)))+(x421));
                                    IKReal x424=IKcos(x414);
                                    IKReal x425=IKsin(x414);
                                    IKReal x426=((x417)*(x423));
                                    IKReal x427=x2;
                                    IKReal x428=((sj2)*(x427));
                                    IKReal x429=((((-1.00000000000000)*(x428)))+(x426));
                                    IKReal x430=((IKabs(x429) != 0)?((IKReal)1/(x429)):(IKReal)1.0e30);
                                    j1array[0]=IKatan2(((x430)*(((((py)*(x420)))+(((-1.00000000000000)*(x417)*(((0.289820000001782)+(((0.261080000000220)*(x425)))+(((0.0289900000000216)*(x424)))))))))), ((x430)*(((((x420)*(x423)))+(((-1.00000000000000)*(py)*(sj2)*(((0.289820000001782)+(((0.261080000000220)*(x425)))+(((0.0289900000000216)*(x424)))))))))));
                                    sj1array[0]=IKsin(j1array[0]);
                                    cj1array[0]=IKcos(j1array[0]);
                                    if( j1array[0] > IKPI )
                                        j1array[0]-=IK2PI;
                                    else if( j1array[0] < -IKPI )
                                        j1array[0]+=IK2PI;
                                    j1valid[0] = true;
                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                    {
                                    if( !j1valid[ij1] ) { continue; }
                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                    
                                    rotationfunction0(vsolutions);
                                    }
                                    }
                                    
                                }
                                
                            }
                            }
                            }
                            
                        }
                        
                    }
                    
                } else
                {
                    if( 1 )
                    {
                    {
                        IKReal j1eval[1];
                        if( ((((py)*(py))+((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))))) < (IKReal)-0.00001 )
                            continue;
                        j1eval[0]=IKabs(IKsqrt((((py)*(py))+((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))))));
                        if( IKabs(j1eval[0]) < 0.000001  )
                        {
                            {
                                if( 1 )
                                {
                                continue;
                                
                            } else
                            {
                            }
                            }
                            
                        } else
                        {
                            {
                            IKReal j1array[2], cj1array[2], sj1array[2];
                            bool j1valid[2]={false};
                            IKReal x431=((cj0)*(px));
                            IKReal x432=((pz)*(sj0));
                            IKReal x433=((((-1.00000000000000)*(x432)))+(x431));
                            IKReal x434=x2;
                            IKReal x435=(x433)*(x433);
                            IKReal x436=((x434)+(x435));
                            if( (x436) < (IKReal)-0.00001 )
                                continue;
                            IKReal x437=IKsqrt(x436);
                            IKReal x438=IKabs(x437);
                            IKReal x439=((IKabs(x438) != 0)?((IKReal)1/(x438)):(IKReal)1.0e30);
                            IKReal x440=((0.261080000000220)*(sj3));
                            IKReal x441=((0.0289900000000216)*(cj3));
                            IKReal x442=((0.289820000001782)+(x441)+(x440));
                            IKReal x443=((x439)*(x442));
                            if( (x443) < -1.0001 || (x443) > 1.0001 )
                                continue;
                            IKReal x444=IKasin(x443);
                            IKReal x445=((-1.00000000000000)*(py));
                            IKReal x446=IKatan2(x445, x433);
                            j1array[0]=((((-1.00000000000000)*(x446)))+(((-1.00000000000000)*(x444))));
                            sj1array[0]=IKsin(j1array[0]);
                            cj1array[0]=IKcos(j1array[0]);
                            j1array[1]=((3.14159265358979)+(((-1.00000000000000)*(x446)))+(x444));
                            sj1array[1]=IKsin(j1array[1]);
                            cj1array[1]=IKcos(j1array[1]);
                            if( j1array[0] > IKPI )
                                j1array[0]-=IK2PI;
                            else if( j1array[0] < -IKPI )
                                j1array[0]+=IK2PI;
                            j1valid[0] = true;
                            if( j1array[1] > IKPI )
                                j1array[1]-=IK2PI;
                            else if( j1array[1] < -IKPI )
                                j1array[1]+=IK2PI;
                            j1valid[1] = true;
                            if( j1valid[0] && j1valid[1] && IKabs(cj1array[0]-cj1array[1]) < 0.0001 && IKabs(sj1array[0]-sj1array[1]) < 0.0001 )
                                j1valid[1]=false;
                            for(int ij1 = 0; ij1 < 2; ++ij1)
                            {
                            if( !j1valid[ij1] ) { continue; }
                            j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                            
                            {
                                IKReal j2eval[1];
                                j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3))));
                                if( IKabs(j2eval[0]) < 0.000001  )
                                {
                                    {
                                    IKReal evalcond[4];
                                        if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                            continue;
                                        IKReal x447=IKasin(0.110398564068419);
                                        IKReal x448=((1.68138208066057)+(x447));
                                        IKReal x449=IKcos(x448);
                                        IKReal x450=((0.0319464036001591)*(x449));
                                        IKReal x451=x4;
                                        IKReal x452=x2;
                                        IKReal x453=x0;
                                        IKReal x454=IKsin(x448);
                                        evalcond[0]=IKfmod(((1.79200613704411)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                        evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x451)))+(((-1.00000000000000)*(x453)))+(((-1.00000000000000)*(x452)))+(x450)+(((-0.149650991199451)*(x454))));
                                        evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x451)))+(((-1.00000000000000)*(x453)))+(((-1.00000000000000)*(x452)))+(x450)+(((-0.149650991197632)*(x454))));
                                        evalcond[3]=((0.289820000001782)+(((-1.00000000000000)*(cj1)*(py)))+(((-1.00000000000000)*(pz)*(sj0)*(sj1)))+(((cj0)*(px)*(sj1)))+(((-0.261080000000220)*(x454)))+(((0.0289900000000216)*(x449))));
                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                        {
                                        {
                                            IKReal j2eval[1];
                                            IKReal x455=x447;
                                            IKReal x456=((1.68138208066057)+(x455));
                                            j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(IKcos(x456))))+(((0.0289900000000216)*(IKsin(x456)))));
                                            if( IKabs(j2eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    continue;
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j2array[1], cj2array[1], sj2array[1];
                                                bool j2valid[1]={false};
                                                IKReal x457=x447;
                                                IKReal x458=((1.68138208066057)+(x457));
                                                IKReal x459=IKcos(x458);
                                                IKReal x460=((0.261080000000220)*(x459));
                                                IKReal x461=IKsin(x458);
                                                IKReal x462=((0.0289900000000216)*(x461));
                                                IKReal x463=((0.0289999999999964)+(x462)+(x460));
                                                IKReal x464=((IKabs(x463) != 0)?((IKReal)1/(x463)):(IKReal)1.0e30);
                                                j2array[0]=IKatan2(((x464)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((-1.00000000000000)*(x464)*(((((-1.00000000000000)*(cj0)*(cj1)*(px)))+(((-1.00000000000000)*(py)*(sj1)))+(((cj1)*(pz)*(sj0)))))));
                                                sj2array[0]=IKsin(j2array[0]);
                                                cj2array[0]=IKcos(j2array[0]);
                                                if( j2array[0] > IKPI )
                                                    j2array[0]-=IK2PI;
                                                else if( j2array[0] < -IKPI )
                                                    j2array[0]+=IK2PI;
                                                j2valid[0] = true;
                                                for(int ij2 = 0; ij2 < 1; ++ij2)
                                                {
                                                if( !j2valid[ij2] ) { continue; }
                                                j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                        if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                            continue;
                                        IKReal x465=IKasin(0.110398564068419);
                                        IKReal x466=((1.46021057292922)+(x465));
                                        IKReal x467=IKsin(x466);
                                        IKReal x468=IKcos(x466);
                                        IKReal x469=((0.0319464036001591)*(x468));
                                        IKReal x470=x4;
                                        IKReal x471=x2;
                                        IKReal x472=x0;
                                        IKReal x473=((x470)+(x471)+(x472));
                                        evalcond[0]=IKfmod(((-1.57083462931276)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                        evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x473)))+(((0.149650991199451)*(x467)))+(x469));
                                        evalcond[2]=((0.153839818898632)+(((0.149650991197632)*(x467)))+(((-1.00000000000000)*(x473)))+(x469));
                                        evalcond[3]=((0.289820000001782)+(((0.0289900000000216)*(x468)))+(((-1.00000000000000)*(cj1)*(py)))+(((-1.00000000000000)*(pz)*(sj0)*(sj1)))+(((cj0)*(px)*(sj1)))+(((0.261080000000220)*(x467))));
                                        if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                        {
                                        {
                                            IKReal j2eval[1];
                                            IKReal x474=x465;
                                            IKReal x475=((1.46021057292922)+(x474));
                                            j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(IKcos(x475))))+(((-0.0289900000000216)*(IKsin(x475)))));
                                            if( IKabs(j2eval[0]) < 0.000001  )
                                            {
                                                {
                                                    if( 1 )
                                                    {
                                                    continue;
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j2array[1], cj2array[1], sj2array[1];
                                                bool j2valid[1]={false};
                                                IKReal x476=x465;
                                                IKReal x477=((1.46021057292922)+(x476));
                                                IKReal x478=IKcos(x477);
                                                IKReal x479=((0.261080000000220)*(x478));
                                                IKReal x480=((0.0289999999999964)+(x479));
                                                IKReal x481=IKsin(x477);
                                                IKReal x482=((0.0289900000000216)*(x481));
                                                IKReal x483=((((-1.00000000000000)*(x482)))+(x480));
                                                IKReal x484=((IKabs(x483) != 0)?((IKReal)1/(x483)):(IKReal)1.0e30);
                                                j2array[0]=IKatan2(((x484)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x484)*(((((cj0)*(cj1)*(px)))+(((-1.00000000000000)*(cj1)*(pz)*(sj0)))+(((py)*(sj1)))))));
                                                sj2array[0]=IKsin(j2array[0]);
                                                cj2array[0]=IKcos(j2array[0]);
                                                if( j2array[0] > IKPI )
                                                    j2array[0]-=IK2PI;
                                                else if( j2array[0] < -IKPI )
                                                    j2array[0]+=IK2PI;
                                                j2valid[0] = true;
                                                for(int ij2 = 0; ij2 < 1; ++ij2)
                                                {
                                                if( !j2valid[ij2] ) { continue; }
                                                j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                        if( 1 )
                                        {
                                        {
                                            IKReal j2eval[2];
                                            j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3))));
                                            j2eval[1]=((((0.0289999999999964)*(sj1)))+(((-0.0289900000000216)*(sj1)*(sj3)))+(((0.261080000000220)*(cj3)*(sj1))));
                                            if( IKabs(j2eval[0]) < 0.000001  || IKabs(j2eval[1]) < 0.000001  )
                                            {
                                                {
                                                IKReal evalcond[5];
                                                    if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                        continue;
                                                    IKReal x485=IKasin(0.110398564068419);
                                                    IKReal x486=((1.68138208066057)+(x485));
                                                    IKReal x487=IKcos(x486);
                                                    IKReal x488=((0.0319464036001591)*(x487));
                                                    IKReal x489=x4;
                                                    IKReal x490=x2;
                                                    IKReal x491=x0;
                                                    IKReal x492=IKsin(x486);
                                                    evalcond[0]=IKfmod(((1.79200613704411)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                    evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x491)))+(((-1.00000000000000)*(x490)))+(((-1.00000000000000)*(x489)))+(((-0.149650991199451)*(x492)))+(x488));
                                                    evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x491)))+(((-1.00000000000000)*(x490)))+(((-1.00000000000000)*(x489)))+(((-0.149650991197632)*(x492)))+(x488));
                                                    evalcond[3]=((0.289820000001782)+(((-1.00000000000000)*(cj1)*(py)))+(((-1.00000000000000)*(pz)*(sj0)*(sj1)))+(((cj0)*(px)*(sj1)))+(((0.0289900000000216)*(x487)))+(((-0.261080000000220)*(x492))));
                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                    {
                                                    {
                                                        IKReal j2eval[1];
                                                        IKReal x493=x485;
                                                        IKReal x494=((1.68138208066057)+(x493));
                                                        j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(IKcos(x494))))+(((0.0289900000000216)*(IKsin(x494)))));
                                                        if( IKabs(j2eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                                if( 1 )
                                                                {
                                                                continue;
                                                                
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            
                                                        } else
                                                        {
                                                            {
                                                            IKReal j2array[1], cj2array[1], sj2array[1];
                                                            bool j2valid[1]={false};
                                                            IKReal x495=x485;
                                                            IKReal x496=((1.68138208066057)+(x495));
                                                            IKReal x497=IKcos(x496);
                                                            IKReal x498=((0.261080000000220)*(x497));
                                                            IKReal x499=IKsin(x496);
                                                            IKReal x500=((0.0289900000000216)*(x499));
                                                            IKReal x501=((0.0289999999999964)+(x498)+(x500));
                                                            IKReal x502=((IKabs(x501) != 0)?((IKReal)1/(x501)):(IKReal)1.0e30);
                                                            j2array[0]=IKatan2(((x502)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((-1.00000000000000)*(x502)*(((((-1.00000000000000)*(cj0)*(cj1)*(px)))+(((-1.00000000000000)*(py)*(sj1)))+(((cj1)*(pz)*(sj0)))))));
                                                            sj2array[0]=IKsin(j2array[0]);
                                                            cj2array[0]=IKcos(j2array[0]);
                                                            if( j2array[0] > IKPI )
                                                                j2array[0]-=IK2PI;
                                                            else if( j2array[0] < -IKPI )
                                                                j2array[0]+=IK2PI;
                                                            j2valid[0] = true;
                                                            for(int ij2 = 0; ij2 < 1; ++ij2)
                                                            {
                                                            if( !j2valid[ij2] ) { continue; }
                                                            j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                            
                                                        }
                                                        
                                                    }
                                                    
                                                } else
                                                {
                                                    if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                        continue;
                                                    IKReal x503=IKasin(0.110398564068419);
                                                    IKReal x504=((1.46021057292922)+(x503));
                                                    IKReal x505=IKsin(x504);
                                                    IKReal x506=IKcos(x504);
                                                    IKReal x507=((0.0319464036001591)*(x506));
                                                    IKReal x508=x4;
                                                    IKReal x509=x2;
                                                    IKReal x510=x0;
                                                    IKReal x511=((x508)+(x509)+(x510));
                                                    evalcond[0]=IKfmod(((-1.57083462931276)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                    evalcond[1]=((0.153839818900451)+(x507)+(((-1.00000000000000)*(x511)))+(((0.149650991199451)*(x505))));
                                                    evalcond[2]=((0.153839818898632)+(x507)+(((-1.00000000000000)*(x511)))+(((0.149650991197632)*(x505))));
                                                    evalcond[3]=((0.289820000001782)+(((-1.00000000000000)*(cj1)*(py)))+(((-1.00000000000000)*(pz)*(sj0)*(sj1)))+(((cj0)*(px)*(sj1)))+(((0.261080000000220)*(x505)))+(((0.0289900000000216)*(x506))));
                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  )
                                                    {
                                                    {
                                                        IKReal j2eval[1];
                                                        IKReal x512=x503;
                                                        IKReal x513=((1.46021057292922)+(x512));
                                                        j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(IKcos(x513))))+(((-0.0289900000000216)*(IKsin(x513)))));
                                                        if( IKabs(j2eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                                if( 1 )
                                                                {
                                                                continue;
                                                                
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            
                                                        } else
                                                        {
                                                            {
                                                            IKReal j2array[1], cj2array[1], sj2array[1];
                                                            bool j2valid[1]={false};
                                                            IKReal x514=x503;
                                                            IKReal x515=((1.46021057292922)+(x514));
                                                            IKReal x516=IKcos(x515);
                                                            IKReal x517=((0.261080000000220)*(x516));
                                                            IKReal x518=((0.0289999999999964)+(x517));
                                                            IKReal x519=IKsin(x515);
                                                            IKReal x520=((0.0289900000000216)*(x519));
                                                            IKReal x521=((((-1.00000000000000)*(x520)))+(x518));
                                                            IKReal x522=((IKabs(x521) != 0)?((IKReal)1/(x521)):(IKReal)1.0e30);
                                                            j2array[0]=IKatan2(((x522)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x522)*(((((cj0)*(cj1)*(px)))+(((-1.00000000000000)*(cj1)*(pz)*(sj0)))+(((py)*(sj1)))))));
                                                            sj2array[0]=IKsin(j2array[0]);
                                                            cj2array[0]=IKcos(j2array[0]);
                                                            if( j2array[0] > IKPI )
                                                                j2array[0]-=IK2PI;
                                                            else if( j2array[0] < -IKPI )
                                                                j2array[0]+=IK2PI;
                                                            j2valid[0] = true;
                                                            for(int ij2 = 0; ij2 < 1; ++ij2)
                                                            {
                                                            if( !j2valid[ij2] ) { continue; }
                                                            j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                            
                                                        }
                                                        
                                                    }
                                                    
                                                } else
                                                {
                                                    IKReal x523=((0.0319464036001591)*(cj3));
                                                    IKReal x524=x4;
                                                    IKReal x525=x2;
                                                    IKReal x526=x0;
                                                    IKReal x527=((x526)+(x524)+(x525));
                                                    IKReal x528=x440;
                                                    IKReal x529=x441;
                                                    IKReal x530=((0.289820000001782)+(x528)+(x529));
                                                    IKReal x531=((x530)+(((-1.00000000000000)*(py))));
                                                    evalcond[0]=IKfmod(j1, ((2.00000000000000)*(3.14159265358979)));
                                                    evalcond[1]=((0.153839818900451)+(((0.149650991199451)*(sj3)))+(((-1.00000000000000)*(x527)))+(x523));
                                                    evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x527)))+(((0.149650991197632)*(sj3)))+(x523));
                                                    evalcond[3]=x531;
                                                    evalcond[4]=x531;
                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                    {
                                                    {
                                                        IKReal j2eval[1];
                                                        j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3))));
                                                        if( IKabs(j2eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                            IKReal evalcond[5];
                                                                if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                                    continue;
                                                                IKReal x532=IKasin(0.110398564068419);
                                                                IKReal x533=((1.68138208066057)+(x532));
                                                                IKReal x534=IKcos(x533);
                                                                IKReal x535=((0.0319464036001591)*(x534));
                                                                IKReal x536=x4;
                                                                IKReal x537=x2;
                                                                IKReal x538=x0;
                                                                IKReal x539=IKsin(x533);
                                                                IKReal x540=((0.0289900000000216)*(x534));
                                                                IKReal x541=((0.289820000001782)+(x540));
                                                                IKReal x542=((0.261080000000220)*(x539));
                                                                IKReal x543=((py)+(x542));
                                                                IKReal x544=((((-1.00000000000000)*(x543)))+(x541));
                                                                evalcond[0]=IKfmod(((1.79200613704411)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                                evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x538)))+(((-1.00000000000000)*(x536)))+(((-1.00000000000000)*(x537)))+(x535)+(((-0.149650991199451)*(x539))));
                                                                evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x538)))+(((-1.00000000000000)*(x536)))+(((-1.00000000000000)*(x537)))+(x535)+(((-0.149650991197632)*(x539))));
                                                                evalcond[3]=x544;
                                                                evalcond[4]=x544;
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j2eval[1];
                                                                    IKReal x545=x532;
                                                                    IKReal x546=((1.68138208066057)+(x545));
                                                                    j2eval[0]=((0.0289999999999964)+(((0.0289900000000216)*(IKsin(x546))))+(((0.261080000000220)*(IKcos(x546)))));
                                                                    if( IKabs(j2eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            continue;
                                                                            
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j2array[1], cj2array[1], sj2array[1];
                                                                        bool j2valid[1]={false};
                                                                        IKReal x547=x532;
                                                                        IKReal x548=((1.68138208066057)+(x547));
                                                                        IKReal x549=IKcos(x548);
                                                                        IKReal x550=((0.261080000000220)*(x549));
                                                                        IKReal x551=IKsin(x548);
                                                                        IKReal x552=((0.0289900000000216)*(x551));
                                                                        IKReal x553=((0.0289999999999964)+(x552)+(x550));
                                                                        IKReal x554=((IKabs(x553) != 0)?((IKReal)1/(x553)):(IKReal)1.0e30);
                                                                        j2array[0]=IKatan2(((x554)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((-1.00000000000000)*(x554)*(((((-1.00000000000000)*(cj0)*(px)))+(((pz)*(sj0)))))));
                                                                        sj2array[0]=IKsin(j2array[0]);
                                                                        cj2array[0]=IKcos(j2array[0]);
                                                                        if( j2array[0] > IKPI )
                                                                            j2array[0]-=IK2PI;
                                                                        else if( j2array[0] < -IKPI )
                                                                            j2array[0]+=IK2PI;
                                                                        j2valid[0] = true;
                                                                        for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                        {
                                                                        if( !j2valid[ij2] ) { continue; }
                                                                        j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                        
                                                                    }
                                                                    
                                                                }
                                                                
                                                            } else
                                                            {
                                                                if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                                    continue;
                                                                IKReal x555=IKasin(0.110398564068419);
                                                                IKReal x556=((1.46021057292922)+(x555));
                                                                IKReal x557=IKsin(x556);
                                                                IKReal x558=IKcos(x556);
                                                                IKReal x559=((0.0319464036001591)*(x558));
                                                                IKReal x560=x4;
                                                                IKReal x561=x2;
                                                                IKReal x562=x0;
                                                                IKReal x563=((x562)+(x560)+(x561));
                                                                IKReal x564=((0.0289900000000216)*(x558));
                                                                IKReal x565=((0.261080000000220)*(x557));
                                                                IKReal x566=((0.289820000001782)+(x564)+(x565));
                                                                IKReal x567=((x566)+(((-1.00000000000000)*(py))));
                                                                evalcond[0]=IKfmod(((-1.57083462931276)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                                evalcond[1]=((0.153839818900451)+(((0.149650991199451)*(x557)))+(x559)+(((-1.00000000000000)*(x563))));
                                                                evalcond[2]=((0.153839818898632)+(((0.149650991197632)*(x557)))+(x559)+(((-1.00000000000000)*(x563))));
                                                                evalcond[3]=x567;
                                                                evalcond[4]=x567;
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j2eval[1];
                                                                    IKReal x568=x555;
                                                                    IKReal x569=((1.46021057292922)+(x568));
                                                                    j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(IKcos(x569))))+(((-0.0289900000000216)*(IKsin(x569)))));
                                                                    if( IKabs(j2eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            continue;
                                                                            
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j2array[1], cj2array[1], sj2array[1];
                                                                        bool j2valid[1]={false};
                                                                        IKReal x570=x555;
                                                                        IKReal x571=((1.46021057292922)+(x570));
                                                                        IKReal x572=IKcos(x571);
                                                                        IKReal x573=((0.261080000000220)*(x572));
                                                                        IKReal x574=((0.0289999999999964)+(x573));
                                                                        IKReal x575=IKsin(x571);
                                                                        IKReal x576=((0.0289900000000216)*(x575));
                                                                        IKReal x577=((((-1.00000000000000)*(x576)))+(x574));
                                                                        IKReal x578=((IKabs(x577) != 0)?((IKReal)1/(x577)):(IKReal)1.0e30);
                                                                        j2array[0]=IKatan2(((x578)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x578)*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))));
                                                                        sj2array[0]=IKsin(j2array[0]);
                                                                        cj2array[0]=IKcos(j2array[0]);
                                                                        if( j2array[0] > IKPI )
                                                                            j2array[0]-=IK2PI;
                                                                        else if( j2array[0] < -IKPI )
                                                                            j2array[0]+=IK2PI;
                                                                        j2valid[0] = true;
                                                                        for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                        {
                                                                        if( !j2valid[ij2] ) { continue; }
                                                                        j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                        
                                                                    }
                                                                    
                                                                }
                                                                
                                                            } else
                                                            {
                                                                if( 1 )
                                                                {
                                                                {
                                                                    IKReal j2eval[1];
                                                                    j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3))));
                                                                    if( IKabs(j2eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                        IKReal evalcond[5];
                                                                            if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                                                continue;
                                                                            IKReal x579=IKasin(0.110398564068419);
                                                                            IKReal x580=((1.68138208066057)+(x579));
                                                                            IKReal x581=IKcos(x580);
                                                                            IKReal x582=((0.0319464036001591)*(x581));
                                                                            IKReal x583=x4;
                                                                            IKReal x584=x2;
                                                                            IKReal x585=x0;
                                                                            IKReal x586=IKsin(x580);
                                                                            IKReal x587=((0.0289900000000216)*(x581));
                                                                            IKReal x588=((0.289820000001782)+(x587));
                                                                            IKReal x589=((0.261080000000220)*(x586));
                                                                            IKReal x590=((py)+(x589));
                                                                            IKReal x591=((((-1.00000000000000)*(x590)))+(x588));
                                                                            evalcond[0]=IKfmod(((1.79200613704411)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                                            evalcond[1]=((0.153839818900451)+(((-0.149650991199451)*(x586)))+(x582)+(((-1.00000000000000)*(x585)))+(((-1.00000000000000)*(x584)))+(((-1.00000000000000)*(x583))));
                                                                            evalcond[2]=((0.153839818898632)+(x582)+(((-0.149650991197632)*(x586)))+(((-1.00000000000000)*(x585)))+(((-1.00000000000000)*(x584)))+(((-1.00000000000000)*(x583))));
                                                                            evalcond[3]=x591;
                                                                            evalcond[4]=x591;
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j2eval[1];
                                                                                IKReal x592=x579;
                                                                                IKReal x593=((1.68138208066057)+(x592));
                                                                                j2eval[0]=((0.0289999999999964)+(((0.0289900000000216)*(IKsin(x593))))+(((0.261080000000220)*(IKcos(x593)))));
                                                                                if( IKabs(j2eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                        
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                    
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j2array[1], cj2array[1], sj2array[1];
                                                                                    bool j2valid[1]={false};
                                                                                    IKReal x594=x579;
                                                                                    IKReal x595=((1.68138208066057)+(x594));
                                                                                    IKReal x596=IKcos(x595);
                                                                                    IKReal x597=((0.261080000000220)*(x596));
                                                                                    IKReal x598=IKsin(x595);
                                                                                    IKReal x599=((0.0289900000000216)*(x598));
                                                                                    IKReal x600=((0.0289999999999964)+(x597)+(x599));
                                                                                    IKReal x601=((IKabs(x600) != 0)?((IKReal)1/(x600)):(IKReal)1.0e30);
                                                                                    j2array[0]=IKatan2(((x601)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((-1.00000000000000)*(x601)*(((((-1.00000000000000)*(cj0)*(px)))+(((pz)*(sj0)))))));
                                                                                    sj2array[0]=IKsin(j2array[0]);
                                                                                    cj2array[0]=IKcos(j2array[0]);
                                                                                    if( j2array[0] > IKPI )
                                                                                        j2array[0]-=IK2PI;
                                                                                    else if( j2array[0] < -IKPI )
                                                                                        j2array[0]+=IK2PI;
                                                                                    j2valid[0] = true;
                                                                                    for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                                    {
                                                                                    if( !j2valid[ij2] ) { continue; }
                                                                                    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                    
                                                                                }
                                                                                
                                                                            }
                                                                            
                                                                        } else
                                                                        {
                                                                            if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                                                continue;
                                                                            IKReal x602=IKasin(0.110398564068419);
                                                                            IKReal x603=((1.46021057292922)+(x602));
                                                                            IKReal x604=IKsin(x603);
                                                                            IKReal x605=IKcos(x603);
                                                                            IKReal x606=((0.0319464036001591)*(x605));
                                                                            IKReal x607=x4;
                                                                            IKReal x608=x2;
                                                                            IKReal x609=x0;
                                                                            IKReal x610=((x607)+(x609)+(x608));
                                                                            IKReal x611=((0.0289900000000216)*(x605));
                                                                            IKReal x612=((0.261080000000220)*(x604));
                                                                            IKReal x613=((0.289820000001782)+(x611)+(x612));
                                                                            IKReal x614=((x613)+(((-1.00000000000000)*(py))));
                                                                            evalcond[0]=IKfmod(((-1.57083462931276)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                                            evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x610)))+(x606)+(((0.149650991199451)*(x604))));
                                                                            evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x610)))+(x606)+(((0.149650991197632)*(x604))));
                                                                            evalcond[3]=x614;
                                                                            evalcond[4]=x614;
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j2eval[1];
                                                                                IKReal x615=x602;
                                                                                IKReal x616=((1.46021057292922)+(x615));
                                                                                j2eval[0]=((0.0289999999999964)+(((-0.0289900000000216)*(IKsin(x616))))+(((0.261080000000220)*(IKcos(x616)))));
                                                                                if( IKabs(j2eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                        
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                    
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j2array[1], cj2array[1], sj2array[1];
                                                                                    bool j2valid[1]={false};
                                                                                    IKReal x617=x602;
                                                                                    IKReal x618=((1.46021057292922)+(x617));
                                                                                    IKReal x619=IKcos(x618);
                                                                                    IKReal x620=((0.261080000000220)*(x619));
                                                                                    IKReal x621=((0.0289999999999964)+(x620));
                                                                                    IKReal x622=IKsin(x618);
                                                                                    IKReal x623=((0.0289900000000216)*(x622));
                                                                                    IKReal x624=((((-1.00000000000000)*(x623)))+(x621));
                                                                                    IKReal x625=((IKabs(x624) != 0)?((IKReal)1/(x624)):(IKReal)1.0e30);
                                                                                    j2array[0]=IKatan2(((x625)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x625)*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))));
                                                                                    sj2array[0]=IKsin(j2array[0]);
                                                                                    cj2array[0]=IKcos(j2array[0]);
                                                                                    if( j2array[0] > IKPI )
                                                                                        j2array[0]-=IK2PI;
                                                                                    else if( j2array[0] < -IKPI )
                                                                                        j2array[0]+=IK2PI;
                                                                                    j2valid[0] = true;
                                                                                    for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                                    {
                                                                                    if( !j2valid[ij2] ) { continue; }
                                                                                    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                    
                                                                                }
                                                                                
                                                                            }
                                                                            
                                                                        } else
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            continue;
                                                                            
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        }
                                                                        }
                                                                        
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j2array[1], cj2array[1], sj2array[1];
                                                                        bool j2valid[1]={false};
                                                                        IKReal x626=((0.261080000000220)*(cj3));
                                                                        IKReal x627=((0.0289999999999964)+(x626));
                                                                        IKReal x628=((0.0289900000000216)*(sj3));
                                                                        IKReal x629=((((-1.00000000000000)*(x628)))+(x627));
                                                                        IKReal x630=((IKabs(x629) != 0)?((IKReal)1/(x629)):(IKReal)1.0e30);
                                                                        j2array[0]=IKatan2(((x630)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x630)*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))));
                                                                        sj2array[0]=IKsin(j2array[0]);
                                                                        cj2array[0]=IKcos(j2array[0]);
                                                                        if( j2array[0] > IKPI )
                                                                            j2array[0]-=IK2PI;
                                                                        else if( j2array[0] < -IKPI )
                                                                            j2array[0]+=IK2PI;
                                                                        j2valid[0] = true;
                                                                        for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                        {
                                                                        if( !j2valid[ij2] ) { continue; }
                                                                        j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                        
                                                                    }
                                                                    
                                                                }
                                                                
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            }
                                                            }
                                                            
                                                        } else
                                                        {
                                                            {
                                                            IKReal j2array[1], cj2array[1], sj2array[1];
                                                            bool j2valid[1]={false};
                                                            IKReal x631=((0.261080000000220)*(cj3));
                                                            IKReal x632=((0.0289999999999964)+(x631));
                                                            IKReal x633=((0.0289900000000216)*(sj3));
                                                            IKReal x634=((((-1.00000000000000)*(x633)))+(x632));
                                                            IKReal x635=((IKabs(x634) != 0)?((IKReal)1/(x634)):(IKReal)1.0e30);
                                                            j2array[0]=IKatan2(((x635)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x635)*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))));
                                                            sj2array[0]=IKsin(j2array[0]);
                                                            cj2array[0]=IKcos(j2array[0]);
                                                            if( j2array[0] > IKPI )
                                                                j2array[0]-=IK2PI;
                                                            else if( j2array[0] < -IKPI )
                                                                j2array[0]+=IK2PI;
                                                            j2valid[0] = true;
                                                            for(int ij2 = 0; ij2 < 1; ++ij2)
                                                            {
                                                            if( !j2valid[ij2] ) { continue; }
                                                            j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                            
                                                        }
                                                        
                                                    }
                                                    
                                                } else
                                                {
                                                    IKReal x636=((0.0319464036001591)*(cj3));
                                                    IKReal x637=x4;
                                                    IKReal x638=x2;
                                                    IKReal x639=x0;
                                                    IKReal x640=((x637)+(x638)+(x639));
                                                    IKReal x641=x440;
                                                    IKReal x642=x441;
                                                    evalcond[0]=IKfmod(((-3.14159265358979)+(j1)), ((2.00000000000000)*(3.14159265358979)));
                                                    evalcond[1]=((0.153839818900451)+(((0.149650991199451)*(sj3)))+(((-1.00000000000000)*(x640)))+(x636));
                                                    evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x640)))+(((0.149650991197632)*(sj3)))+(x636));
                                                    evalcond[3]=((0.289820000001782)+(py)+(x642)+(x641));
                                                    evalcond[4]=((-0.289820000001782)+(((-1.00000000000000)*(x641)))+(((-1.00000000000000)*(x642)))+(((-1.00000000000000)*(py))));
                                                    if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                    {
                                                    {
                                                        IKReal j2eval[1];
                                                        j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3))));
                                                        if( IKabs(j2eval[0]) < 0.000001  )
                                                        {
                                                            {
                                                            IKReal evalcond[5];
                                                                if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                                    continue;
                                                                IKReal x643=IKasin(0.110398564068419);
                                                                IKReal x644=((1.68138208066057)+(x643));
                                                                IKReal x645=IKcos(x644);
                                                                IKReal x646=((0.0319464036001591)*(x645));
                                                                IKReal x647=x4;
                                                                IKReal x648=x2;
                                                                IKReal x649=x0;
                                                                IKReal x650=IKsin(x644);
                                                                IKReal x651=((0.261080000000220)*(x650));
                                                                IKReal x652=((0.0289900000000216)*(x645));
                                                                evalcond[0]=IKfmod(((1.79200613704411)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                                evalcond[1]=((0.153839818900451)+(((-0.149650991199451)*(x650)))+(((-1.00000000000000)*(x647)))+(((-1.00000000000000)*(x648)))+(((-1.00000000000000)*(x649)))+(x646));
                                                                evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x647)))+(((-1.00000000000000)*(x648)))+(((-1.00000000000000)*(x649)))+(x646)+(((-0.149650991197632)*(x650))));
                                                                evalcond[3]=((0.289820000001782)+(((-1.00000000000000)*(x651)))+(py)+(x652));
                                                                evalcond[4]=((-0.289820000001782)+(((-1.00000000000000)*(x652)))+(x651)+(((-1.00000000000000)*(py))));
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j2eval[1];
                                                                    IKReal x653=x643;
                                                                    IKReal x654=((1.68138208066057)+(x653));
                                                                    j2eval[0]=((0.0289999999999964)+(((0.0289900000000216)*(IKsin(x654))))+(((0.261080000000220)*(IKcos(x654)))));
                                                                    if( IKabs(j2eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            continue;
                                                                            
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j2array[1], cj2array[1], sj2array[1];
                                                                        bool j2valid[1]={false};
                                                                        IKReal x655=x643;
                                                                        IKReal x656=((1.68138208066057)+(x655));
                                                                        IKReal x657=IKcos(x656);
                                                                        IKReal x658=((0.261080000000220)*(x657));
                                                                        IKReal x659=IKsin(x656);
                                                                        IKReal x660=((0.0289900000000216)*(x659));
                                                                        IKReal x661=((0.0289999999999964)+(x658)+(x660));
                                                                        IKReal x662=((IKabs(x661) != 0)?((IKReal)1/(x661)):(IKReal)1.0e30);
                                                                        j2array[0]=IKatan2(((x662)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((-1.00000000000000)*(x662)*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))));
                                                                        sj2array[0]=IKsin(j2array[0]);
                                                                        cj2array[0]=IKcos(j2array[0]);
                                                                        if( j2array[0] > IKPI )
                                                                            j2array[0]-=IK2PI;
                                                                        else if( j2array[0] < -IKPI )
                                                                            j2array[0]+=IK2PI;
                                                                        j2valid[0] = true;
                                                                        for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                        {
                                                                        if( !j2valid[ij2] ) { continue; }
                                                                        j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                        
                                                                    }
                                                                    
                                                                }
                                                                
                                                            } else
                                                            {
                                                                if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                                    continue;
                                                                IKReal x663=IKasin(0.110398564068419);
                                                                IKReal x664=((1.46021057292922)+(x663));
                                                                IKReal x665=IKsin(x664);
                                                                IKReal x666=IKcos(x664);
                                                                IKReal x667=((0.0319464036001591)*(x666));
                                                                IKReal x668=x4;
                                                                IKReal x669=x2;
                                                                IKReal x670=x0;
                                                                IKReal x671=((x669)+(x668)+(x670));
                                                                IKReal x672=((0.0289900000000216)*(x666));
                                                                IKReal x673=((0.261080000000220)*(x665));
                                                                evalcond[0]=IKfmod(((-1.57083462931276)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                                evalcond[1]=((0.153839818900451)+(((0.149650991199451)*(x665)))+(x667)+(((-1.00000000000000)*(x671))));
                                                                evalcond[2]=((0.153839818898632)+(((0.149650991197632)*(x665)))+(x667)+(((-1.00000000000000)*(x671))));
                                                                evalcond[3]=((0.289820000001782)+(py)+(x672)+(x673));
                                                                evalcond[4]=((-0.289820000001782)+(((-1.00000000000000)*(py)))+(((-1.00000000000000)*(x673)))+(((-1.00000000000000)*(x672))));
                                                                if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                {
                                                                {
                                                                    IKReal j2eval[1];
                                                                    IKReal x674=x663;
                                                                    IKReal x675=((1.46021057292922)+(x674));
                                                                    j2eval[0]=((0.0289999999999964)+(((-0.0289900000000216)*(IKsin(x675))))+(((0.261080000000220)*(IKcos(x675)))));
                                                                    if( IKabs(j2eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            continue;
                                                                            
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j2array[1], cj2array[1], sj2array[1];
                                                                        bool j2valid[1]={false};
                                                                        IKReal x676=x663;
                                                                        IKReal x677=((1.46021057292922)+(x676));
                                                                        IKReal x678=IKcos(x677);
                                                                        IKReal x679=((0.261080000000220)*(x678));
                                                                        IKReal x680=((0.0289999999999964)+(x679));
                                                                        IKReal x681=IKsin(x677);
                                                                        IKReal x682=((0.0289900000000216)*(x681));
                                                                        IKReal x683=((((-1.00000000000000)*(x682)))+(x680));
                                                                        IKReal x684=((IKabs(x683) != 0)?((IKReal)1/(x683)):(IKReal)1.0e30);
                                                                        j2array[0]=IKatan2(((x684)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x684)*(((((-1.00000000000000)*(cj0)*(px)))+(((pz)*(sj0)))))));
                                                                        sj2array[0]=IKsin(j2array[0]);
                                                                        cj2array[0]=IKcos(j2array[0]);
                                                                        if( j2array[0] > IKPI )
                                                                            j2array[0]-=IK2PI;
                                                                        else if( j2array[0] < -IKPI )
                                                                            j2array[0]+=IK2PI;
                                                                        j2valid[0] = true;
                                                                        for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                        {
                                                                        if( !j2valid[ij2] ) { continue; }
                                                                        j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                        
                                                                    }
                                                                    
                                                                }
                                                                
                                                            } else
                                                            {
                                                                if( 1 )
                                                                {
                                                                {
                                                                    IKReal j2eval[1];
                                                                    j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3))));
                                                                    if( IKabs(j2eval[0]) < 0.000001  )
                                                                    {
                                                                        {
                                                                        IKReal evalcond[5];
                                                                            if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                                                continue;
                                                                            IKReal x685=IKasin(0.110398564068419);
                                                                            IKReal x686=((1.68138208066057)+(x685));
                                                                            IKReal x687=IKcos(x686);
                                                                            IKReal x688=((0.0319464036001591)*(x687));
                                                                            IKReal x689=x4;
                                                                            IKReal x690=x2;
                                                                            IKReal x691=x0;
                                                                            IKReal x692=IKsin(x686);
                                                                            IKReal x693=((0.261080000000220)*(x692));
                                                                            IKReal x694=((0.0289900000000216)*(x687));
                                                                            evalcond[0]=IKfmod(((1.79200613704411)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                                            evalcond[1]=((0.153839818900451)+(((-1.00000000000000)*(x689)))+(((-0.149650991199451)*(x692)))+(x688)+(((-1.00000000000000)*(x691)))+(((-1.00000000000000)*(x690))));
                                                                            evalcond[2]=((0.153839818898632)+(((-0.149650991197632)*(x692)))+(((-1.00000000000000)*(x689)))+(x688)+(((-1.00000000000000)*(x691)))+(((-1.00000000000000)*(x690))));
                                                                            evalcond[3]=((0.289820000001782)+(py)+(x694)+(((-1.00000000000000)*(x693))));
                                                                            evalcond[4]=((-0.289820000001782)+(x693)+(((-1.00000000000000)*(x694)))+(((-1.00000000000000)*(py))));
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j2eval[1];
                                                                                IKReal x695=x685;
                                                                                IKReal x696=((1.68138208066057)+(x695));
                                                                                j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(IKcos(x696))))+(((0.0289900000000216)*(IKsin(x696)))));
                                                                                if( IKabs(j2eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                        
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                    
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j2array[1], cj2array[1], sj2array[1];
                                                                                    bool j2valid[1]={false};
                                                                                    IKReal x697=x685;
                                                                                    IKReal x698=((1.68138208066057)+(x697));
                                                                                    IKReal x699=IKcos(x698);
                                                                                    IKReal x700=((0.261080000000220)*(x699));
                                                                                    IKReal x701=IKsin(x698);
                                                                                    IKReal x702=((0.0289900000000216)*(x701));
                                                                                    IKReal x703=((0.0289999999999964)+(x702)+(x700));
                                                                                    IKReal x704=((IKabs(x703) != 0)?((IKReal)1/(x703)):(IKReal)1.0e30);
                                                                                    j2array[0]=IKatan2(((x704)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((-1.00000000000000)*(x704)*(((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))));
                                                                                    sj2array[0]=IKsin(j2array[0]);
                                                                                    cj2array[0]=IKcos(j2array[0]);
                                                                                    if( j2array[0] > IKPI )
                                                                                        j2array[0]-=IK2PI;
                                                                                    else if( j2array[0] < -IKPI )
                                                                                        j2array[0]+=IK2PI;
                                                                                    j2valid[0] = true;
                                                                                    for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                                    {
                                                                                    if( !j2valid[ij2] ) { continue; }
                                                                                    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                    
                                                                                }
                                                                                
                                                                            }
                                                                            
                                                                        } else
                                                                        {
                                                                            if( (0.110398564068419) < -1.0001 || (0.110398564068419) > 1.0001 )
                                                                                continue;
                                                                            IKReal x705=IKasin(0.110398564068419);
                                                                            IKReal x706=((1.46021057292922)+(x705));
                                                                            IKReal x707=IKsin(x706);
                                                                            IKReal x708=IKcos(x706);
                                                                            IKReal x709=((0.0319464036001591)*(x708));
                                                                            IKReal x710=x4;
                                                                            IKReal x711=x2;
                                                                            IKReal x712=x0;
                                                                            IKReal x713=((x711)+(x710)+(x712));
                                                                            IKReal x714=((0.0289900000000216)*(x708));
                                                                            IKReal x715=((0.261080000000220)*(x707));
                                                                            evalcond[0]=IKfmod(((-1.57083462931276)+(j3)), ((2.00000000000000)*(3.14159265358979)));
                                                                            evalcond[1]=((0.153839818900451)+(((0.149650991199451)*(x707)))+(((-1.00000000000000)*(x713)))+(x709));
                                                                            evalcond[2]=((0.153839818898632)+(((-1.00000000000000)*(x713)))+(((0.149650991197632)*(x707)))+(x709));
                                                                            evalcond[3]=((0.289820000001782)+(py)+(x715)+(x714));
                                                                            evalcond[4]=((-0.289820000001782)+(((-1.00000000000000)*(x714)))+(((-1.00000000000000)*(x715)))+(((-1.00000000000000)*(py))));
                                                                            if( IKabs(evalcond[0]) < 0.000010  && IKabs(evalcond[1]) < 0.000010  && IKabs(evalcond[2]) < 0.000010  && IKabs(evalcond[3]) < 0.000010  && IKabs(evalcond[4]) < 0.000010  )
                                                                            {
                                                                            {
                                                                                IKReal j2eval[1];
                                                                                IKReal x716=x705;
                                                                                IKReal x717=((1.46021057292922)+(x716));
                                                                                j2eval[0]=((0.0289999999999964)+(((0.261080000000220)*(IKcos(x717))))+(((-0.0289900000000216)*(IKsin(x717)))));
                                                                                if( IKabs(j2eval[0]) < 0.000001  )
                                                                                {
                                                                                    {
                                                                                        if( 1 )
                                                                                        {
                                                                                        continue;
                                                                                        
                                                                                    } else
                                                                                    {
                                                                                    }
                                                                                    }
                                                                                    
                                                                                } else
                                                                                {
                                                                                    {
                                                                                    IKReal j2array[1], cj2array[1], sj2array[1];
                                                                                    bool j2valid[1]={false};
                                                                                    IKReal x718=x705;
                                                                                    IKReal x719=((1.46021057292922)+(x718));
                                                                                    IKReal x720=IKcos(x719);
                                                                                    IKReal x721=((0.261080000000220)*(x720));
                                                                                    IKReal x722=((0.0289999999999964)+(x721));
                                                                                    IKReal x723=IKsin(x719);
                                                                                    IKReal x724=((0.0289900000000216)*(x723));
                                                                                    IKReal x725=((((-1.00000000000000)*(x724)))+(x722));
                                                                                    IKReal x726=((IKabs(x725) != 0)?((IKReal)1/(x725)):(IKReal)1.0e30);
                                                                                    j2array[0]=IKatan2(((x726)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x726)*(((((-1.00000000000000)*(cj0)*(px)))+(((pz)*(sj0)))))));
                                                                                    sj2array[0]=IKsin(j2array[0]);
                                                                                    cj2array[0]=IKcos(j2array[0]);
                                                                                    if( j2array[0] > IKPI )
                                                                                        j2array[0]-=IK2PI;
                                                                                    else if( j2array[0] < -IKPI )
                                                                                        j2array[0]+=IK2PI;
                                                                                    j2valid[0] = true;
                                                                                    for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                                    {
                                                                                    if( !j2valid[ij2] ) { continue; }
                                                                                    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                                    
                                                                                    rotationfunction0(vsolutions);
                                                                                    }
                                                                                    }
                                                                                    
                                                                                }
                                                                                
                                                                            }
                                                                            
                                                                        } else
                                                                        {
                                                                            if( 1 )
                                                                            {
                                                                            continue;
                                                                            
                                                                        } else
                                                                        {
                                                                        }
                                                                        }
                                                                        }
                                                                        }
                                                                        
                                                                    } else
                                                                    {
                                                                        {
                                                                        IKReal j2array[1], cj2array[1], sj2array[1];
                                                                        bool j2valid[1]={false};
                                                                        IKReal x727=((0.261080000000220)*(cj3));
                                                                        IKReal x728=((0.0289999999999964)+(x727));
                                                                        IKReal x729=((0.0289900000000216)*(sj3));
                                                                        IKReal x730=((((-1.00000000000000)*(x729)))+(x728));
                                                                        IKReal x731=((IKabs(x730) != 0)?((IKReal)1/(x730)):(IKReal)1.0e30);
                                                                        j2array[0]=IKatan2(((x731)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x731)*(((((-1.00000000000000)*(cj0)*(px)))+(((pz)*(sj0)))))));
                                                                        sj2array[0]=IKsin(j2array[0]);
                                                                        cj2array[0]=IKcos(j2array[0]);
                                                                        if( j2array[0] > IKPI )
                                                                            j2array[0]-=IK2PI;
                                                                        else if( j2array[0] < -IKPI )
                                                                            j2array[0]+=IK2PI;
                                                                        j2valid[0] = true;
                                                                        for(int ij2 = 0; ij2 < 1; ++ij2)
                                                                        {
                                                                        if( !j2valid[ij2] ) { continue; }
                                                                        j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                                        
                                                                        rotationfunction0(vsolutions);
                                                                        }
                                                                        }
                                                                        
                                                                    }
                                                                    
                                                                }
                                                                
                                                            } else
                                                            {
                                                            }
                                                            }
                                                            }
                                                            }
                                                            
                                                        } else
                                                        {
                                                            {
                                                            IKReal j2array[1], cj2array[1], sj2array[1];
                                                            bool j2valid[1]={false};
                                                            IKReal x732=((0.261080000000220)*(cj3));
                                                            IKReal x733=((0.0289999999999964)+(x732));
                                                            IKReal x734=((0.0289900000000216)*(sj3));
                                                            IKReal x735=((((-1.00000000000000)*(x734)))+(x733));
                                                            IKReal x736=((IKabs(x735) != 0)?((IKReal)1/(x735)):(IKReal)1.0e30);
                                                            j2array[0]=IKatan2(((x736)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x736)*(((((-1.00000000000000)*(cj0)*(px)))+(((pz)*(sj0)))))));
                                                            sj2array[0]=IKsin(j2array[0]);
                                                            cj2array[0]=IKcos(j2array[0]);
                                                            if( j2array[0] > IKPI )
                                                                j2array[0]-=IK2PI;
                                                            else if( j2array[0] < -IKPI )
                                                                j2array[0]+=IK2PI;
                                                            j2valid[0] = true;
                                                            for(int ij2 = 0; ij2 < 1; ++ij2)
                                                            {
                                                            if( !j2valid[ij2] ) { continue; }
                                                            j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                            
                                                            rotationfunction0(vsolutions);
                                                            }
                                                            }
                                                            
                                                        }
                                                        
                                                    }
                                                    
                                                } else
                                                {
                                                    if( 1 )
                                                    {
                                                    continue;
                                                    
                                                } else
                                                {
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }
                                                
                                            } else
                                            {
                                                {
                                                IKReal j2array[1], cj2array[1], sj2array[1];
                                                bool j2valid[1]={false};
                                                j2array[0]=IKatan2(((((IKabs(((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3))))) != 0)?((IKReal)1/(((0.0289999999999964)+(((0.261080000000220)*(cj3)))+(((-0.0289900000000216)*(sj3)))))):(IKReal)1.0e30))*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((((IKabs(((((0.0289999999999964)*(sj1)))+(((-0.0289900000000216)*(sj1)*(sj3)))+(((0.261080000000220)*(cj3)*(sj1))))) != 0)?((IKReal)1/(((((0.0289999999999964)*(sj1)))+(((-0.0289900000000216)*(sj1)*(sj3)))+(((0.261080000000220)*(cj3)*(sj1)))))):(IKReal)1.0e30))*(((((-0.0289900000000216)*(cj1)*(cj3)))+(py)+(((-0.289820000001782)*(cj1)))+(((-0.261080000000220)*(cj1)*(sj3)))))));
                                                sj2array[0]=IKsin(j2array[0]);
                                                cj2array[0]=IKcos(j2array[0]);
                                                if( j2array[0] > IKPI )
                                                    j2array[0]-=IK2PI;
                                                else if( j2array[0] < -IKPI )
                                                    j2array[0]+=IK2PI;
                                                j2valid[0] = true;
                                                for(int ij2 = 0; ij2 < 1; ++ij2)
                                                {
                                                if( !j2valid[ij2] ) { continue; }
                                                j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                                
                                                rotationfunction0(vsolutions);
                                                }
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    } else
                                    {
                                    }
                                    }
                                    }
                                    }
                                    
                                } else
                                {
                                    {
                                    IKReal j2array[1], cj2array[1], sj2array[1];
                                    bool j2valid[1]={false};
                                    IKReal x737=((0.261080000000220)*(cj3));
                                    IKReal x738=((0.0289999999999964)+(x737));
                                    IKReal x739=((0.0289900000000216)*(sj3));
                                    IKReal x740=((((-1.00000000000000)*(x739)))+(x738));
                                    IKReal x741=((IKabs(x740) != 0)?((IKReal)1/(x740)):(IKReal)1.0e30);
                                    j2array[0]=IKatan2(((x741)*(((((-1.00000000000000)*(px)*(sj0)))+(((-1.00000000000000)*(cj0)*(pz)))))), ((x741)*(((((cj0)*(cj1)*(px)))+(((-1.00000000000000)*(cj1)*(pz)*(sj0)))+(((py)*(sj1)))))));
                                    sj2array[0]=IKsin(j2array[0]);
                                    cj2array[0]=IKcos(j2array[0]);
                                    if( j2array[0] > IKPI )
                                        j2array[0]-=IK2PI;
                                    else if( j2array[0] < -IKPI )
                                        j2array[0]+=IK2PI;
                                    j2valid[0] = true;
                                    for(int ij2 = 0; ij2 < 1; ++ij2)
                                    {
                                    if( !j2valid[ij2] ) { continue; }
                                    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                                    
                                    rotationfunction0(vsolutions);
                                    }
                                    }
                                    
                                }
                                
                            }
                            }
                            }
                            
                        }
                        
                    }
                    
                } else
                {
                }
                }
                }
                }
                
            } else
            {
                {
                IKReal j2array[2], cj2array[2], sj2array[2];
                bool j2valid[2]={false};
                IKReal x742=((0.261080000000220)*(cj3));
                IKReal x743=((0.0289999999999964)+(x742));
                IKReal x744=((0.0289900000000216)*(sj3));
                IKReal x745=((x743)+(((-1.00000000000000)*(x744))));
                IKReal x746=((IKabs(x745) != 0)?((IKReal)1/(x745)):(IKReal)1.0e30);
                sj2array[0]=((((-1.00000000000000)*(px)*(sj0)*(x746)))+(((-1.00000000000000)*(cj0)*(pz)*(x746))));
                if( sj2array[0] >= -1.0001 && sj2array[0] <= 1.0001 )
                {
                    j2valid[0] = j2valid[1] = true;
                    j2array[0] = IKasin(sj2array[0]);
                    cj2array[0] = IKcos(j2array[0]);
                    sj2array[1] = sj2array[0];
                    j2array[1] = j2array[0] > 0 ? (IKPI-j2array[0]) : (-IKPI-j2array[0]);
                    cj2array[1] = -cj2array[0];
                }
                else if( isnan(sj2array[0]) )
                {
                    // probably any value will work
                    j2valid[0] = true;
                    cj2array[0] = 1; sj2array[0] = 0; j2array[0] = 0;
                }
                if( j2valid[0] && j2valid[1] && IKabs(cj2array[0]-cj2array[1]) < 0.0001 && IKabs(sj2array[0]-sj2array[1]) < 0.0001 )
                    j2valid[1]=false;
                for(int ij2 = 0; ij2 < 2; ++ij2)
                {
                if( !j2valid[ij2] ) { continue; }
                j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
                
                {
                    IKReal j1eval[1];
                    j1eval[0]=((((((((-1.00000000000000)*(pz)*(sj0)))+(((cj0)*(px)))))*(((0.289820000001782)+(((0.261080000000220)*(sj3)))+(((0.0289900000000216)*(cj3)))))))+(((py)*(((((0.0289999999999964)*(cj2)))+(((-0.0289900000000216)*(cj2)*(sj3)))+(((0.261080000000220)*(cj2)*(cj3))))))));
                    if( IKabs(j1eval[0]) < 0.000001  )
                    {
                        {
                            if( 1 )
                            {
                            {
                                IKReal j1eval[1];
                                IKReal x747=((pz)*(sj0));
                                IKReal x748=((cj0)*(px));
                                j1eval[0]=((((((x747)+(((-1.00000000000000)*(x748)))))*(((x748)+(((-1.00000000000000)*(x747)))))))+(((-1.00000000000000)*((py)*(py)))));
                                if( IKabs(j1eval[0]) < 0.000001  )
                                {
                                    {
                                        if( 1 )
                                        {
                                        continue;
                                        
                                    } else
                                    {
                                    }
                                    }
                                    
                                } else
                                {
                                    {
                                    IKReal j1array[1], cj1array[1], sj1array[1];
                                    bool j1valid[1]={false};
                                    IKReal x749=((cj0)*(px));
                                    IKReal x750=((pz)*(sj0));
                                    IKReal x751=((x750)+(((-1.00000000000000)*(x749))));
                                    IKReal x752=((0.0289900000000216)*(cj2)*(sj3));
                                    IKReal x753=((x749)+(((-1.00000000000000)*(x750))));
                                    IKReal x754=((x751)*(x753));
                                    IKReal x755=x2;
                                    IKReal x756=((x754)+(((-1.00000000000000)*(x755))));
                                    IKReal x757=((IKabs(x756) != 0)?((IKReal)1/(x756)):(IKReal)1.0e30);
                                    j1array[0]=IKatan2(((x757)*(((((-1.00000000000000)*(x751)*(((0.289820000001782)+(((0.261080000000220)*(sj3)))+(((0.0289900000000216)*(cj3)))))))+(((-1.00000000000000)*(py)*(((((0.0289999999999964)*(cj2)))+(((0.261080000000220)*(cj2)*(cj3)))+(((-1.00000000000000)*(x752)))))))))), ((x757)*(((((-1.00000000000000)*(py)*(((0.289820000001782)+(((0.261080000000220)*(sj3)))+(((0.0289900000000216)*(cj3)))))))+(((x753)*(((((-0.261080000000220)*(cj2)*(cj3)))+(((-0.0289999999999964)*(cj2)))+(x752)))))))));
                                    sj1array[0]=IKsin(j1array[0]);
                                    cj1array[0]=IKcos(j1array[0]);
                                    if( j1array[0] > IKPI )
                                        j1array[0]-=IK2PI;
                                    else if( j1array[0] < -IKPI )
                                        j1array[0]+=IK2PI;
                                    j1valid[0] = true;
                                    for(int ij1 = 0; ij1 < 1; ++ij1)
                                    {
                                    if( !j1valid[ij1] ) { continue; }
                                    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                                    
                                    rotationfunction0(vsolutions);
                                    }
                                    }
                                    
                                }
                                
                            }
                            
                        } else
                        {
                        }
                        }
                        
                    } else
                    {
                        {
                        IKReal j1array[1], cj1array[1], sj1array[1];
                        bool j1valid[1]={false};
                        IKReal x758=((0.261080000000220)*(sj3));
                        IKReal x759=((0.0289900000000216)*(cj3));
                        IKReal x760=((0.289820000001782)+(x759)+(x758));
                        IKReal x761=((cj0)*(px));
                        IKReal x762=((pz)*(sj0));
                        IKReal x763=((((-1.00000000000000)*(x762)))+(x761));
                        IKReal x764=((x760)*(x763));
                        IKReal x765=((0.0289999999999964)*(cj2));
                        IKReal x766=((0.261080000000220)*(cj2)*(cj3));
                        IKReal x767=((x765)+(x766));
                        IKReal x768=((0.0289900000000216)*(cj2)*(sj3));
                        IKReal x769=((((-1.00000000000000)*(x768)))+(x767));
                        IKReal x770=((py)*(x769));
                        IKReal x771=((x770)+(x764));
                        IKReal x772=((IKabs(x771) != 0)?((IKReal)1/(x771)):(IKReal)1.0e30);
                        j1array[0]=IKatan2(((x772)*((((py)*(py))+(((-1.00000000000000)*((x760)*(x760))))))), ((x772)*(((((x760)*(x769)))+(((py)*(x763)))))));
                        sj1array[0]=IKsin(j1array[0]);
                        cj1array[0]=IKcos(j1array[0]);
                        if( j1array[0] > IKPI )
                            j1array[0]-=IK2PI;
                        else if( j1array[0] < -IKPI )
                            j1array[0]+=IK2PI;
                        j1valid[0] = true;
                        for(int ij1 = 0; ij1 < 1; ++ij1)
                        {
                        if( !j1valid[ij1] ) { continue; }
                        j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
                        
                        rotationfunction0(vsolutions);
                        }
                        }
                        
                    }
                    
                }
                }
                }
                
            }
            
        }
        }
        }
        
    } else
    {
    }
    }
    }
return vsolutions.size()>0;
}
    void rotationfunction0(std::vector<IKSolution>& vsolutions) {
        IKReal x49=((cj1)*(sj3));
        IKReal x50=((cj2)*(cj3)*(sj1));
        IKReal x51=((x49)+(x50));
        IKReal x52=((cj0)*(cj1)*(cj2));
        IKReal x53=((sj0)*(sj2));
        IKReal x54=((x52)+(((-1.00000000000000)*(x53))));
        IKReal x55=((cj3)*(x54));
        IKReal x56=((cj0)*(sj1)*(sj3));
        IKReal x57=((x55)+(((-1.00000000000000)*(x56))));
        IKReal x58=((cj1)*(cj2)*(sj0));
        IKReal x59=((cj0)*(sj2));
        IKReal x60=((x59)+(x58));
        IKReal x61=((-1.00000000000000)*(x60));
        IKReal x62=((cj3)*(x61));
        IKReal x63=((sj0)*(sj1)*(sj3));
        IKReal x64=((x62)+(x63));
        IKReal x65=((cj1)*(cj3));
        IKReal x66=((cj2)*(sj1)*(sj3));
        IKReal x67=((x65)+(((-1.00000000000000)*(x66))));
        IKReal x68=((x53)+(((-1.00000000000000)*(x52))));
        IKReal x69=((sj3)*(x68));
        IKReal x70=((cj0)*(cj3)*(sj1));
        IKReal x71=((((-1.00000000000000)*(x70)))+(x69));
        IKReal x72=((sj3)*(x60));
        IKReal x73=((cj3)*(sj0)*(sj1));
        IKReal x74=((x73)+(x72));
        IKReal x75=((cj2)*(sj0));
        IKReal x76=((cj1)*(x59));
        IKReal x77=((x76)+(x75));
        IKReal x78=((cj0)*(cj2));
        IKReal x79=((cj1)*(x53));
        IKReal x80=((((-1.00000000000000)*(x79)))+(x78));
        new_r00=((((r10)*(x51)))+(((r00)*(x57)))+(((r20)*(x64))));
        new_r01=((((r11)*(x51)))+(((r01)*(x57)))+(((r21)*(x64))));
        new_r02=((((r22)*(x64)))+(((r02)*(x57)))+(((r12)*(x51))));
        new_r10=((((r10)*(x67)))+(((r20)*(x74)))+(((r00)*(x71))));
        new_r11=((((r21)*(x74)))+(((r11)*(x67)))+(((r01)*(x71))));
        new_r12=((((r22)*(x74)))+(((r02)*(x71)))+(((r12)*(x67))));
        new_r20=((((r10)*(sj1)*(sj2)))+(((r20)*(x80)))+(((r00)*(x77))));
        new_r21=((((r21)*(x80)))+(((r01)*(x77)))+(((r11)*(sj1)*(sj2))));
        new_r22=((((r02)*(x77)))+(((r12)*(sj1)*(sj2)))+(((r22)*(x80))));
            {
        IKReal j5eval;
        j5eval=new_r02;
        if( j5eval >= -1.000010 && j5eval <= -0.999990 )
        {
            {
            j5 = -1.570796; sj5 = -1.000000; cj5 = 0.000000;
            IKReal j4mul = 1;
            j4=0;
            IKReal j6mul=1.00000000000000;
            j6=((-1.00000000000000)*(IKatan2(new_r21, new_r20)));
            vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
            solution.basesol.resize(7);
            solution.basesol[0].foffset = j0;
            solution.basesol[1].foffset = j1;
            solution.basesol[2].foffset = j2;
            solution.basesol[3].foffset = j3;
            solution.basesol[4].foffset = j4;
            solution.basesol[4].fmul = j4mul;
            solution.basesol[4].freeind = 0;
            solution.basesol[5].foffset = j5;
            solution.basesol[6].foffset = j6;
            solution.basesol[6].fmul = j6mul;
            solution.basesol[6].freeind = 0;
            solution.vfree.resize(1);
            solution.vfree[0] = 4;
            }
            
        } else
        if( j5eval >= 0.999990 && j5eval <= 1.000010 )
        {
            {
            j5 = 1.570796; sj5 = 1.000000; cj5 = 0.000000;
            IKReal j4mul = 1;
            j4=0;
            IKReal j6mul=-1.00000000000000;
            j6=((((-1.00000000000000)*(IKatan2(new_r21, new_r20))))+(((-1.00000000000000)*(3.14159265358979))));
            vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
            solution.basesol.resize(7);
            solution.basesol[0].foffset = j0;
            solution.basesol[1].foffset = j1;
            solution.basesol[2].foffset = j2;
            solution.basesol[3].foffset = j3;
            solution.basesol[4].foffset = j4;
            solution.basesol[4].fmul = j4mul;
            solution.basesol[4].freeind = 0;
            solution.basesol[5].foffset = j5;
            solution.basesol[6].foffset = j6;
            solution.basesol[6].fmul = j6mul;
            solution.basesol[6].freeind = 0;
            solution.vfree.resize(1);
            solution.vfree[0] = 4;
            }
            
        } else
        {
            {
            IKReal j4array[2], cj4array[2], sj4array[2];
            bool j4valid[2]={false};
            j4array[0]=IKatan2(((-1.00000000000000)*(new_r12)), new_r22);
            sj4array[0]=IKsin(j4array[0]);
            cj4array[0]=IKcos(j4array[0]);
            j4array[1] = j4array[0] > 0 ? j4array[0]-IKPI : j4array[0]+IKPI;
            sj4array[1] = -sj4array[0];
            cj4array[1] = -cj4array[0];
            if( j4array[0] > IKPI )
                j4array[0]-=IK2PI;
            else if( j4array[0] < -IKPI )
                j4array[0]+=IK2PI;
            j4valid[0] = true;
            if( j4array[1] > IKPI )
                j4array[1]-=IK2PI;
            else if( j4array[1] < -IKPI )
                j4array[1]+=IK2PI;
            j4valid[1] = true;
            if( j4valid[0] && j4valid[1] && IKabs(cj4array[0]-cj4array[1]) < 0.0001 && IKabs(sj4array[0]-sj4array[1]) < 0.0001 )
                j4valid[1]=false;
            for(int ij4 = 0; ij4 < 2; ++ij4)
            {
            if( !j4valid[ij4] ) { continue; }
            j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
            
            {
            IKReal evalcond[1];
                evalcond[0]=IKcos(j4);
                if( IKabs(evalcond[0]) < 0.000010  )
                {
                {
                IKReal j5array[1], cj5array[1], sj5array[1];
                bool j5valid[1]={false};
                j5array[0]=IKatan2(new_r02, ((-1.00000000000000)*(new_r12)*(((IKabs(IKsin(j4)) != 0)?((IKReal)1/(IKsin(j4))):(IKReal)1.0e30))));
                sj5array[0]=IKsin(j5array[0]);
                cj5array[0]=IKcos(j5array[0]);
                if( j5array[0] > IKPI )
                    j5array[0]-=IK2PI;
                else if( j5array[0] < -IKPI )
                    j5array[0]+=IK2PI;
                j5valid[0] = true;
                for(int ij5 = 0; ij5 < 1; ++ij5)
                {
                if( !j5valid[ij5] ) { continue; }
                j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
                
                {
                IKReal j6array[1], cj6array[1], sj6array[1];
                bool j6valid[1]={false};
                IKReal x81=IKsin(j4);
                IKReal x82=((IKabs(x81) != 0)?((IKReal)1/(x81)):(IKReal)1.0e30);
                j6array[0]=IKatan2(((new_r20)*(x82)), ((new_r21)*(x82)));
                sj6array[0]=IKsin(j6array[0]);
                cj6array[0]=IKcos(j6array[0]);
                if( j6array[0] > IKPI )
                    j6array[0]-=IK2PI;
                else if( j6array[0] < -IKPI )
                    j6array[0]+=IK2PI;
                j6valid[0] = true;
                for(int ij6 = 0; ij6 < 1; ++ij6)
                {
                if( !j6valid[ij6] ) { continue; }
                j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                
                vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                solution.basesol.resize(7);
                solution.basesol[0].foffset = j0;
                solution.basesol[1].foffset = j1;
                solution.basesol[2].foffset = j2;
                solution.basesol[3].foffset = j3;
                solution.basesol[4].foffset = j4;
                solution.basesol[5].foffset = j5;
                solution.basesol[6].foffset = j6;
                solution.vfree.resize(0);
                }
                }
                }
                }
                
            } else
            {
                if( 1 )
                {
                {
                IKReal j5array[1], cj5array[1], sj5array[1];
                bool j5valid[1]={false};
                j5array[0]=IKatan2(new_r02, ((new_r22)*(((IKabs(cj4) != 0)?((IKReal)1/(cj4)):(IKReal)1.0e30))));
                sj5array[0]=IKsin(j5array[0]);
                cj5array[0]=IKcos(j5array[0]);
                if( j5array[0] > IKPI )
                    j5array[0]-=IK2PI;
                else if( j5array[0] < -IKPI )
                    j5array[0]+=IK2PI;
                j5valid[0] = true;
                for(int ij5 = 0; ij5 < 1; ++ij5)
                {
                if( !j5valid[ij5] ) { continue; }
                j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
                
                {
                IKReal evalcond[1];
                    evalcond[0]=IKcos(j5);
                    if( IKabs(evalcond[0]) < 0.000010  )
                    {
                    {
                    IKReal j6array[1], cj6array[1], sj6array[1];
                    bool j6valid[1]={false};
                    IKReal x83=IKsin(j5);
                    IKReal x84=((IKabs(x83) != 0)?((IKReal)1/(x83)):(IKReal)1.0e30);
                    IKReal x85=IKsin(j4);
                    IKReal x86=IKcos(j4);
                    j6array[0]=IKatan2(((((-1.00000000000000)*(new_r11)*(x84)*(x85)))+(((new_r21)*(x84)*(x86)))), ((((new_r21)*(x85)))+(((new_r11)*(x86)))));
                    sj6array[0]=IKsin(j6array[0]);
                    cj6array[0]=IKcos(j6array[0]);
                    if( j6array[0] > IKPI )
                        j6array[0]-=IK2PI;
                    else if( j6array[0] < -IKPI )
                        j6array[0]+=IK2PI;
                    j6valid[0] = true;
                    for(int ij6 = 0; ij6 < 1; ++ij6)
                    {
                    if( !j6valid[ij6] ) { continue; }
                    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                    
                    vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                    solution.basesol.resize(7);
                    solution.basesol[0].foffset = j0;
                    solution.basesol[1].foffset = j1;
                    solution.basesol[2].foffset = j2;
                    solution.basesol[3].foffset = j3;
                    solution.basesol[4].foffset = j4;
                    solution.basesol[5].foffset = j5;
                    solution.basesol[6].foffset = j6;
                    solution.vfree.resize(0);
                    }
                    }
                    
                } else
                {
                    if( 1 )
                    {
                    {
                    IKReal j6array[1], cj6array[1], sj6array[1];
                    bool j6valid[1]={false};
                    IKReal x87=IKcos(j5);
                    IKReal x88=((IKabs(x87) != 0)?((IKReal)1/(x87)):(IKReal)1.0e30);
                    j6array[0]=IKatan2(((-1.00000000000000)*(new_r01)*(x88)), ((new_r00)*(x88)));
                    sj6array[0]=IKsin(j6array[0]);
                    cj6array[0]=IKcos(j6array[0]);
                    if( j6array[0] > IKPI )
                        j6array[0]-=IK2PI;
                    else if( j6array[0] < -IKPI )
                        j6array[0]+=IK2PI;
                    j6valid[0] = true;
                    for(int ij6 = 0; ij6 < 1; ++ij6)
                    {
                    if( !j6valid[ij6] ) { continue; }
                    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
                    
                    vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
                    solution.basesol.resize(7);
                    solution.basesol[0].foffset = j0;
                    solution.basesol[1].foffset = j1;
                    solution.basesol[2].foffset = j2;
                    solution.basesol[3].foffset = j3;
                    solution.basesol[4].foffset = j4;
                    solution.basesol[5].foffset = j5;
                    solution.basesol[6].foffset = j6;
                    solution.vfree.resize(0);
                    }
                    }
                    
                } else
                {
                }
                }
                }
                }
                }
                
            } else
            {
            }
            }
            }
            }
            }
            
        }
        }
        }};

/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
IKSolver solver;
return solver.ik(eetrans,eerot,pfree,vsolutions);
}

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv)
{
    if( argc != 12+getNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",getNumFreeParameters());
        return 1;
    }

    std::vector<IKSolution> vsolutions;
    std::vector<IKReal> vfree(getNumFreeParameters());
    IKReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ik(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, vsolutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)vsolutions.size());
    std::vector<IKReal> sol(getNumJoints());
    for(size_t i = 0; i < vsolutions.size(); ++i) {
        printf("sol%d (free=%d): ", (int)i, (int)vsolutions[i].GetFree().size());
        std::vector<IKReal> vsolfree(vsolutions[i].GetFree().size());
        vsolutions[i].GetSolution(&sol[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( size_t j = 0; j < sol.size(); ++j)
            printf("%f, ", (float)sol[j]);
        printf("\n");
    }
    return 0;
}

#endif
