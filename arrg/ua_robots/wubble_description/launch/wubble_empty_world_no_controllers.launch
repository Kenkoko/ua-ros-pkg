<launch>

     <!-- start gazebo with an empty plane -->
    <param name="/use_sim_time" value="true" />

    <node name="gazebo" pkg="gazebo" type="gazebo" args="$(find gazebo_worlds)/worlds/empty.world" respawn="false" >
        <env name="LD_LIBRARY_PATH" value="$(find gazebo_plugins)/lib:$(find pr2_gazebo_plugins)/lib:$(find gazebo)/gazebo/lib:$(optenv LD_LIBRARY_PATH)" />
        <env name="GAZEBO_RESOURCE_PATH" value="$(find pr2_ogre):$(find pr2_defs):$(find pr2_description):$(find gazebo_worlds):$(find gazebo)/gazebo/share/gazebo:$(find erratic_description):$(find smart_arm_description):$(find wubble_description)" />
        <env name="OGRE_RESOURCE_PATH" value="$(find ogre)/ogre/lib/OGRE" />
    </node>

    <!-- send the wubble robot XML to param server -->
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find wubble_description)/urdf/wubble.urdf.xacro'" />

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="spawn_erratic" pkg="gazebo_tools" type="gazebo_model" args="-z 0.01 -p robot_description spawn robot_description" respawn="false" output="screen" />

    <!-- Controller Manager -->
<!--    <include file="$(find pr2_controller_manager)/controller_manager.launch" />-->

    <!-- load controllers -->
    <node name="diffdrive" pkg="wubble_plugins" type="gazebo_ros_diffdrive" respawn="true" output="screen"/>

    <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="true" output="screen" >
        <param name="odom_frame_id" value="odom"/>
    </node>

</launch>

