/* auto-generated by genmsg_cpp from /home/dhewlett/ros/ua-ros-pkg/ua_experimental/oomdp_msgs/msg/Relation.msg.  Do not edit! */
package ros.pkg.oomdp_msgs.msg;


import java.nio.ByteBuffer;

public  class Relation extends ros.communication.Message
{

  public java.lang.String relation;
  public java.lang.String[] obj_names;
  public byte value;

  public Relation() {
 super();
    relation = new java.lang.String();
  obj_names = new java.lang.String[0];

  }
  public static java.lang.String __s_getDataType() { return "oomdp_msgs/Relation"; }
  public static java.lang.String __s_getMD5Sum() { return "8ea728c18651e6f097c828382036c843"; }
  public static java.lang.String __s_getMessageDefinition()
  {
    return 
    "string relation\n" + 
    "string[] obj_names\n" + 
    "bool value\n" + 
    "\n" + 
    "\n" + 
    "";
  }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public java.lang.String getMD5Sum()   { return __s_getMD5Sum(); }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }
  public Relation clone() {
    Relation clone = (Relation)super.clone();
      obj_names =  (java.lang.String[])(clone.obj_names.clone());
    return clone;
  }

  public static java.util.Map<java.lang.String, java.lang.String> fieldTypes() {
         java.util.HashMap<java.lang.String, java.lang.String> m = new java.util.HashMap<java.lang.String, java.lang.String>  ();      m.put("relation", "java.lang.String");
     m.put("obj_names", "java.lang.String[]");
     m.put("value", "byte");
     return m;
  }

  public static java.util.Set<java.lang.String> submessageTypes() {
         java.util.HashSet<java.lang.String> s = new java.util.HashSet<java.lang.String>  ();      return s;
  }

  public void setTo(ros.communication.Message __m) {
    if (!(__m instanceof Relation)) throw new RuntimeException("Invalid Type");
    Relation __m2 = (Relation) __m;
    relation = __m2.relation;
    obj_names = __m2.obj_names;
    value = __m2.value;
    }

  int calc_obj_names_array_serialization_len() {
    int l = 0;
    for (int i = 0; i < obj_names.length; i++) 
      l += 4 + obj_names[i].length();
    return l;
  }
  public int serializationLength() 
  {
    int __l = 0;
    __l += 4 + relation.length(); // relation
    __l += 4 + calc_obj_names_array_serialization_len(); // obj_names
    __l += 1; // value
    return __l;
  }
  public void serialize(ByteBuffer bb, int seq) {
    Serialization.writeString(bb, relation);
    bb.putInt(obj_names.length);
    for (java.lang.String x : obj_names)
      Serialization.writeString(bb, x);
    bb.put(value);
  }
  public void deserialize(ByteBuffer bb)  {
    relation = Serialization.readString(bb);
     int obj_names_len = bb.getInt();
    obj_names = new java.lang.String[obj_names_len];
    for(int i = 0; i < obj_names_len; i++)
      obj_names[i] = Serialization.readString(bb);
    value = bb.get();
  }
}

