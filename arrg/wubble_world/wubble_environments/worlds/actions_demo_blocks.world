<?xml version="1.0"?>

<gazebo:world 
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:gazebo="http://playerstage.sourceforge.net/gazebo/xmlschema/#gz" 
    xmlns:model="http://playerstage.sourceforge.net/gazebo/xmlschema/#model" 
    xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" 
    xmlns:window="http://playerstage.sourceforge.net/gazebo/xmlschema/#window" 
    xmlns:param="http://playerstage.sourceforge.net/gazebo/xmlschema/#param" 
    xmlns:body="http://playerstage.sourceforge.net/gazebo/xmlschema/#body" 
    xmlns:geo="http://willowgarage.com/xmlschema/#geo" 
    xmlns:geom="http://playerstage.sourceforge.net/gazebo/xmlschema/#geom" 
    xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#joint" 
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" 
    xmlns:ui="http://playerstage.sourceforge.net/gazebo/xmlschema/#ui"
    xmlns:rendering="http://playerstage.sourceforge.net/gazebo/xmlschema/#rendering" 
    xmlns:renderable="http://playerstage.sourceforge.net/gazebo/xmlschema/#renderable" 
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    xmlns:physics="http://playerstage.sourceforge.net/gazebo/xmlschema/#physics" >

    <verbosity>5</verbosity>

    <!-- ODE physics parameters
         cfm:         constraint force mixing is 1e-5 for single precision
         erp:         error reduction parameter is typically .1 to .8
         mu1 and mu2: tangential friction forces (0 to infinity) 

         Used to create the soft_erp and soft_cfm of an object based on a spring-damper 
         system and the step size. 
         kp:          spring constant
         kd:          damper constant
         
         mass matrix: a default is created by ODE but you can set your own values
              ixx, iyy, izz: diagonals of the mass matrix, all other values are zero for
              symmetrical objects, large values means more torque is needed to spin
              about that axis, zero means an infinite spinning. 

              02/17/2010 Bouncy block fix from John Hsu: defaults for inertia 
              matrix were too small to stop box rotation. Fix applied only to 
              smaller blocks for now. ODE default is 1e-6.   
    -->

    <!-- here's the global contact cfm/erp -->
    <physics:ode>
        <stepTime>0.001</stepTime>
        <gravity>0 0 -9.8</gravity>
        <cfm>0.000000000001</cfm>
        <erp>0.2</erp>
        <quickStep>true</quickStep>
        <quickStepIters>10</quickStepIters> 
        <quickStepW>1.3</quickStepW> 
        <contactMaxCorrectingVel>100.0</contactMaxCorrectingVel>
        <contactSurfaceLayer>0.001</contactSurfaceLayer>
    </physics:ode>

    <geo:origin>
        <lat>37.4270909558</lat>
        <lon>-122.077919338</lon>
    </geo:origin>

    <rendering:gui>
        <type>fltk</type>
        <size>1024 768</size>
        <pos>0 0</pos>
        <frames>
            <row height="100%">
                <camera width="100%">
                    <xyz>2.0 0 0.95</xyz>
                    <rpy>180 165 0</rpy>
                </camera>
            </row>
        </frames>
    </rendering:gui>

    <!-- sky -->
    <rendering:ogre>
        <ambient>1.0 1.0 1.0 1.0</ambient>
        <sky>
            <material>WubbleWorld/CloudySky</material>
        </sky>
        <gazeboPath>media</gazeboPath>
        <grid>false</grid>
        <maxUpdateRate>10</maxUpdateRate>
        <shadowTechnique>stencilAdditive</shadowTechnique>
    </rendering:ogre>

    <!-- ground plane-->
    <model:physical name="env_ground_floor_wood_model">
        <xyz>0 0 0</xyz>
        <rpy>0 0 0</rpy>
        <static>true</static>
        <body:plane name="env_ground_floor_wood_body">
            <geom:plane name="env_ground_floor_wood_geom">
                <laserRetro>2000.0</laserRetro>
                <kp>1000000.0</kp>
                <kd>1.0</kd>
                <normal>0 0 1</normal>
                <uvTile>3 3</uvTile>
                <size>7 5</size>
                <material>WubbleWorld/LightWood</material>
            </geom:plane>
        </body:plane>
    </model:physical>

    <!-- White Point light -->
    <model:renderable name="env_light_pointwhite1_white_model">
        <xyz>2.0 0 7.5</xyz>
        <enableGravity>false</enableGravity>
        <light>
            <type>point</type>
            <diffuseColor>0.4 0.4 0.4</diffuseColor>
            <specularColor>0.1 0.1 0.1</specularColor>
            <range>30</range>
            <attenuation>0.5 0.01 0.001</attenuation>
        </light>
    </model:renderable>

    <!-- pub world state controller -->
    <model:physical name="gazebo_ros_pub_world_state_controller_model">
        <include embedded="true">
            <xi:include href="../objects/gazebo_ros_pub_world_state_controller.model" />
        </include>
    </model:physical>

    <!-- clock -->
    <model:physical name="clock">
        <xyz>0 0 0</xyz>
        <rpy>0 0 0</rpy>
        <static>true</static>
        <body:box name="clock_body">
            <geom:box name="clock_geom">
                <mesh>default</mesh>
                <size>0 0 0</size>
                <visual>
                    <size>0 0 0</size>
                    <material>WubbleWorld/White</material>
                    <mesh>unit_box</mesh>
                </visual>
            </geom:box>
        </body:box>
        
        <!-- broadcast ros /time with simTime -->
        <controller:gazebo_ros_time name="gazebo_ros_time" plugin="libgazebo_ros_time.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>1000.0</updateRate>
            <interface:audio name="dummy_gazebo_ros_time_iface_should_not_be_here"/>
        </controller:gazebo_ros_time>
        
        <!-- offer ROS services to spawn and delete models -->
        <controller:gazebo_ros_factory name="gazebo_ros_factory" plugin="libgazebo_ros_factory.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>1.0</updateRate>
            <interface:audio name="dummy_gazebo_ros_factory_iface_should_not_be_here"/>
        </controller:gazebo_ros_factory>
    </model:physical>


    <!-- walls -->
    <model:physical name="env_wall_walls_wallpaint_model">
        <rpy>0.0 0.0 0.0</rpy>
        <static>true</static>
        <!-- surrounding walls -->
        <body:box name="env_wall_walls_wallpaint_body">
            <geom:box name="env_wall_wall1_wallpaint_geom">
                <xyz>0 -2.45 1</xyz>
                <mesh>default</mesh>
                <size>7 .1 2</size>
                <visual>
                    <size>7 .1 2</size>
                    <mesh>unit_box</mesh>
                    <material>WubbleWorld/PaintedWall</material>
                </visual>
            </geom:box>
            
            <geom:box name="env_wall_wall2_wallpaint_geom">
                <xyz>0 2.45 1</xyz>
                <mesh>default</mesh>
                <size>7 .1 2</size>
                <visual>
                    <size>7 .1 2</size>
                    <mesh>unit_box</mesh>
                    <material>WubbleWorld/PaintedWall</material>
                </visual>
            </geom:box>
            
            <geom:box name="env_wall_wall3_wallpaint_geom">
                <xyz>-3.45 0 1</xyz>
                <mesh>default</mesh>
                <size>.1 5 2</size>
                <visual>
                    <size>.1 5 2</size>
                    <mesh>unit_box</mesh>
                    <material>WubbleWorld/PaintedWall</material>
                </visual>
            </geom:box>
            
            <geom:box name="env_wall_wall4_wallpaint_geom">
                <xyz>3.45 0 1</xyz>
                <mesh>default</mesh>
                <size>.1 5 2</size>
                <visual>
                    <size>.1 5 2</size>
                    <mesh>unit_box</mesh>
                    <material>WubbleWorld/PaintedWall</material>
                </visual>
            </geom:box>
        </body:box>
    </model:physical>

    <!-- large rocky sphere -->
    <model:physical name="obj_sphere_sphererocky1_rocky_model">
        <xyz>-2.6   1.7   0.5</xyz>
        <rpy> 0.0   0.0   0.0</rpy>
        <body:sphere name="obj_sphere_sphererocky1_rocky_body">
            <geom:sphere name="obj_sphere_sphererocky1_rocky_geom">
                <mesh>default</mesh>
                <size>0.5</size>
                <mass>3.0</mass>
                <visual>
                    <size> 1.0 1.0 1.0</size>
                    <material>WubbleWorld/Rocky</material>
                    <mesh>unit_sphere</mesh>
                </visual>
            </geom:sphere>
        </body:sphere>
    </model:physical>

    <!-- gray sphere -->
    <model:physical name="obj_sphere_spheregray1_gray_model">
        <xyz>-2.8 -1.8  1.0</xyz>
        <rpy> 0.0  0.0  0.0</rpy>
        <body:sphere name="obj_sphere_spheregray1_gray_body">
            <geom:sphere name="obj_sphere_spheregray1_gray_geom">
                <mesh>default</mesh>
                <size>0.2</size>
                <mass>1.0</mass>
                <visual>
                    <size>0.4 0.4 0.4</size>
                    <material>WubbleWorld/Grey</material>
                    <mesh>unit_sphere</mesh>
                </visual>
            </geom:sphere>
        </body:sphere>
    </model:physical>

    <!-- large metal box -->
    <model:physical name="obj_box_boxmetal1_metal_model">
        <xyz>-2.8  -1.8   0.35</xyz>
        <static>false</static>
        <body:box name="obj_box_boxmetal1_metal_body">
            <geom:box name="obj_box_boxmetal1_metal_geom">
                <size>0.7 0.7 0.7</size>
                <mass>2.0</mass>
                <visual>
                    <size>0.7 0.7 0.7</size>
                    <mesh>unit_box</mesh>
                    <material>WubbleWorld/BumpyMetal</material>
                </visual>
            </geom:box>
        </body:box>
    </model:physical>

    <!-- red box -->
    <model:physical name="obj_box_boxred1_red_model">
        <xyz> 0.324256 -0.192411 0.0242112</xyz>
        <rpy> 0.000218484 0.000175919 50.0837</rpy>
        <static>false</static>
        <body:box name="obj_box_boxred1_red_body">
            <dampingFactor>0.0</dampingFactor>
            <massMatrix>true</massMatrix>
            <mass>0.05</mass>
            <ixx>0.001</ixx>
            <ixy>0.0</ixy>
            <ixz>0.0</ixz>
            <iyy>0.001</iyy>
            <iyz>0.0</iyz>
            <izz>0.001</izz>
            <cx>0.0</cx>
            <cy>0.0</cy>
            <cz>0.0</cz>
            <geom:box name="obj_box_boxred1_red_geom">
                <mu1>1.0</mu1>
                <mu2>1.0</mu2>
                <kp>100000000.0</kp>
                <kd>1.0</kd>
                <size>0.05 0.05 0.05</size>
                <mass>0.05</mass>
                <visual>
                    <size>0.05 0.05 0.05</size>
                    <mesh>unit_box</mesh>
                    <material>WubbleWorld/Red</material>
                </visual>
            </geom:box>
        </body:box>
    </model:physical>

    <!-- green box -->
    <model:physical name="obj_box_boxgreen1_green_model">
        <xyz> 0.40 0.0  0.0242112</xyz>
        <rpy> 0.6  0.0  0.0242112</rpy>
        <static>false</static>
        <body:box name="obj_box_boxgreen1_green_body">
            <dampingFactor>0.0</dampingFactor>
            <massMatrix>true</massMatrix>
            <mass>0.05</mass>
            <ixx>0.001</ixx>
            <ixy>0.0</ixy>
            <ixz>0.0</ixz>
            <iyy>0.001</iyy>
            <iyz>0.0</iyz>
            <izz>0.001</izz>
            <cx>0.0</cx>
            <cy>0.0</cy>
            <cz>0.0</cz>
            <geom:box name="obj_box_boxgreen1_green_geom">
                <mu1>1.0</mu1>
                <mu2>1.0</mu2>
                <kp>100000000.0</kp>
                <kd>1.0</kd>
                <size>0.05 0.05 0.05</size>
                <mass>0.05</mass>
                <visual>
                    <size>0.05 0.05 0.05</size>
                    <mesh>unit_box</mesh>
                    <material>WubbleWorld/Green</material>
                </visual>
            </geom:box>
        </body:box>
    </model:physical>


</gazebo:world>
