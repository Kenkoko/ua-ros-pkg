#! /usr/bin/env python
#*
#*  Copyright (c) 2010, Antons Rebguns
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the author nor the names of other
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Fast Saliency algorithm parameters dynamic configuration

import roslib
roslib.load_manifest('saliency_tracking')

from dynamic_reconfigure.parameter_generator import *
from driver_base.msg import SensorLevels

gen = ParameterGenerator()

#       Name, Type, Reconfiguration level, Description, Default, Min, Max

gen.add("distribution_power", int_t, SensorLevels.RECONFIGURE_RUNNING, "Generalized Gaussian Distribution Power", 9, 0, 19)
gen.add("use_temporal_features", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Use Difference of Exponential Features", True)
gen.add("use_spatial_features", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Use Difference of Box Features", True)
gen.add("use_color_contrast", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Use Color Information", True)
gen.add("use_histogram", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Use Estimated GG Distribution Params", True)
gen.add("estimate_histogram", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Estimate GG Dist Params from Data", True)

gen.add("img_scale", int_t, SensorLevels.RECONFIGURE_CLOSE, "Image Scale", 1, 1, 10)
gen.add("temporal_scales", int_t, SensorLevels.RECONFIGURE_CLOSE, "# Temporal Scales", 0, 0, 6)
gen.add("spatial_scales", int_t, SensorLevels.RECONFIGURE_CLOSE, "# Spatial Scales", 0, 0, 6)
gen.add("temporal_falloff", int_t, SensorLevels.RECONFIGURE_CLOSE, "Slowest Temporal Feature Decay", 0, 0, 10)
gen.add("spatial_size", int_t, SensorLevels.RECONFIGURE_CLOSE, "Smallest Spatial Scale Radius", 0, 0, 3)

gen.add("display_img", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Enable Display of Saliency Map", True)

exit(gen.generate('saliency_tracking', "fast_saliency_dynamic_reconfigure", "FastSaliency"))
