<launch>

    <node pkg="topic_tools" type="throttle" name="tilt_scan_throttle" args="messages tilt_scan 3.0 tilt_scan_throttled" />
    <node pkg="topic_tools" type="throttle" name="tilt_scan_filtered_throttle" args="messages tilt_scan_filtered 3.0 tilt_scan_filtered_throttled" />
    
    <!-- The old tilting laser code was deleted/deprecated, this is the new way -->
    <rosparam command="load" file="$(find pr2_controller_configuration)/pr2_laser_tilt_controller.yaml" />
    <node pkg="pr2_mechanism_controllers" type="send_periodic_cmd_srv.py" name="laser_commander" args="laser_tilt_controller linear 10 .75 .25" />
    <node pkg="pr2_controller_manager" type="spawner" name="laser_tilt_c_spawner" args="laser_tilt_controller" />    

    <node pkg="2dnav_pr2" type="navstack_tilt_profile.py" args="laser_tilt_controller" name="send_navstack_tilt_profile" />

    <!-- Filter for tilt laser shadowing/veiling -->
    <node pkg="laser_filters" type="scan_to_cloud_filter_chain" respawn="true" name="tilt_shadow_filter">
        <remap from="scan" to="tilt_scan" />
        <remap from="cloud_filtered" to="tilt_scan_shadow_filtered" />
        <param name="target_frame" value="base_link" />
        <param name="high_fidelity" value="true" />
        <rosparam command="load" file="$(find 2dnav_pr2)/config/shadow_filter.yaml" />
        <rosparam command="load" file="$(find 2dnav_pr2)/config/point_cloud_footprint_filter.yaml" />
    </node>

    <!-- Filter for tilt laser scans that hit the body of the robot -->
<!--    <node pkg="robot_self_filter" type="self_filter" name="tilt_laser_self_filter" respawn="true" output="screen">-->
      <!-- The topic for the input cloud -->
<!--      <remap from="cloud_in" to="tilt_scan_shadow_filtered" />-->
      <!-- The topic for the output cloud -->
<!--      <remap from="cloud_out" to="tilt_scan_filtered" />-->
      <!-- The frame of the sensor used to obtain the data to be
        filtered; This parameter is optional. If it is not specified,
        shadow points will be considered outside -->
<!--      <param name="sensor_frame" type="string" value="laser_tilt_link" />-->
      <!-- Minimum distance to sensor (for point not to be considered inside) -->
<!--      <param name="min_sensor_dist" type="double" value="0.01" />-->
      <!-- The padding to be added for the body parts the robot can see -->
<!--      <param name="self_see_padd" type="double" value="0.05" />-->
      <!-- The scaling to be added for the body parts the robot can see -->
<!--      <param name="self_see_scale" type="double" value="1.0" />-->
      <!-- The names of the links the sensor can see -->
<!--      <param name="self_see_links" type="string" -->
<!--             value="base_laser_link-->
<!--                    base_link" />-->
<!--    </node>-->

</launch>
