# autogenerated by genmsg_py from IcarusWorldStateRequest.msg. Do not edit.
import roslib.message
import struct

## \htmlinclude IcarusWorldStateRequest.msg.html

class IcarusWorldStateRequest(roslib.message.Message):
  _md5sum = "d41d8cd98f00b204e9800998ecf8427e"
  _type = "wubble_environments/IcarusWorldStateRequest"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """
"""
  __slots__ = []
  _slot_types = []

  ## Constructor. Any message fields that are implicitly/explicitly
  ## set to None will be assigned a default value. The recommend
  ## use is keyword arguments as this is more robust to future message
  ## changes.  You cannot mix in-order arguments and keyword arguments.
  ##
  ## The available fields are:
  ##   
  ##
  ## @param args: complete set of field values, in .msg order
  ## @param kwds: use keyword arguments corresponding to message field names
  ## to set specific fields. 
  def __init__(self, *args, **kwds):
    super(IcarusWorldStateRequest, self).__init__(*args, **kwds)

  ## internal API method
  def _get_types(self): return IcarusWorldStateRequest._slot_types

  ## serialize message into buffer
  ## @param buff StringIO: buffer
  def serialize(self, buff):
    try:
      pass
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  ## unpack serialized message in str into this message instance
  ## @param str str: byte array of serialized message
  def deserialize(self, str):
    try:
      end = 0
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  ## serialize message with numpy array types into buffer
  ## @param buff StringIO: buffer
  ## @param numpy module: numpy python module
  def serialize_numpy(self, buff, numpy):
    try:
      pass
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  ## unpack serialized message in str into this message instance using numpy for array types
  ## @param str str: byte array of serialized message
  ## @param numpy module: numpy python module
  def deserialize_numpy(self, str, numpy):
    try:
      end = 0
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

# autogenerated by genmsg_py from IcarusWorldStateResponse.msg. Do not edit.
import roslib.message
import struct

## \htmlinclude IcarusWorldStateResponse.msg.html

class IcarusWorldStateResponse(roslib.message.Message):
  _md5sum = "af6d3a99f0fbeb66d3248fa4b3e675fb"
  _type = "wubble_environments/IcarusWorldStateResponse"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """string state


"""
  __slots__ = ['state']
  _slot_types = ['string']

  ## Constructor. Any message fields that are implicitly/explicitly
  ## set to None will be assigned a default value. The recommend
  ## use is keyword arguments as this is more robust to future message
  ## changes.  You cannot mix in-order arguments and keyword arguments.
  ##
  ## The available fields are:
  ##   state
  ##
  ## @param args: complete set of field values, in .msg order
  ## @param kwds: use keyword arguments corresponding to message field names
  ## to set specific fields. 
  def __init__(self, *args, **kwds):
    super(IcarusWorldStateResponse, self).__init__(*args, **kwds)
    #message fields cannot be None, assign default values for those that are
    if self.state is None:
      self.state = ''

  ## internal API method
  def _get_types(self): return IcarusWorldStateResponse._slot_types

  ## serialize message into buffer
  ## @param buff StringIO: buffer
  def serialize(self, buff):
    try:
      length = len(self.state)
      #serialize self.state
      buff.write(struct.pack('<I%ss'%length, length, self.state))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  ## unpack serialized message in str into this message instance
  ## @param str str: byte array of serialized message
  def deserialize(self, str):
    try:
      end = 0
      start = end
      end += 4
      (length,) = struct.unpack('<I',str[start:end])
      #deserialize self.state
      pattern = '<%ss'%length
      start = end
      end += struct.calcsize(pattern)
      (self.state,) = struct.unpack(pattern, str[start:end])
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  ## serialize message with numpy array types into buffer
  ## @param buff StringIO: buffer
  ## @param numpy module: numpy python module
  def serialize_numpy(self, buff, numpy):
    try:
      length = len(self.state)
      #serialize self.state
      buff.write(struct.pack('<I%ss'%length, length, self.state))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  ## unpack serialized message in str into this message instance using numpy for array types
  ## @param str str: byte array of serialized message
  ## @param numpy module: numpy python module
  def deserialize_numpy(self, str, numpy):
    try:
      end = 0
      start = end
      end += 4
      (length,) = struct.unpack('<I',str[start:end])
      #deserialize self.state
      pattern = '<%ss'%length
      start = end
      end += struct.calcsize(pattern)
      (self.state,) = struct.unpack(pattern, str[start:end])
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

class IcarusWorldState(roslib.message.ServiceDefinition):
  _type          = 'wubble_environments/IcarusWorldState'
  _md5sum = 'af6d3a99f0fbeb66d3248fa4b3e675fb'
  _request_class  = IcarusWorldStateRequest
  _response_class = IcarusWorldStateResponse
